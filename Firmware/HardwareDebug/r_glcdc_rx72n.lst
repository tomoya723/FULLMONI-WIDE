   1                             		.file	"r_glcdc_rx72n.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.r_glcdc_interrupt_setting,"ax",@progbits
   5                             		.global	_r_glcdc_interrupt_setting
   7                             	_r_glcdc_interrupt_setting:
   8                             	.LVL0:
   9                             	.LFB3:
  10                             		.file 1 "../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c"
   1:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
   2:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * DISCLAIMER
   3:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * applicable laws, including copyright laws.
   6:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES
  12:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * following link:
  15:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * http://www.renesas.com/disclaimer
  16:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *
  17:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Copyright (C) 2019-2020 Renesas Electronics Corporation. All rights reserved.
  18:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  **************************************************************************************************
  19:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
  20:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * File Name    : r_glcdc_rx72n.c
  21:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Version      : 1.40
  22:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Description  : Internal function program using in GLCDC API functions.
  23:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  **************************************************************************************************
  24:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
  25:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * History : DD.MM.YYYY Version   Description
  26:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *         : 20.09.2019 1.30      First Release
  27:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *         : 30.06.2020 1.40      Fixed preprocessor condition of BSP version.
  28:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** ***************************************************************************************************
  29:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
  30:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  Includes <System Includes> , "Project Includes"
  31:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  **************************************************************************************************
  32:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #include "../../r_glcdc_private.h"
  33:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  34:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /* Check MCU Group */
  35:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if defined(BSP_MCU_RX72N)
  36:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
  37:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  Imported global variables and functions (from other files)
  38:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  **************************************************************************************************
  39:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  40:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /**************************************************************************************************
  41:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  Private global variables and functions
  42:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  **************************************************************************************************
  43:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  44:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** /*******************************************************************************
  45:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Outline      : Interrupt setting.
  46:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Function Name: r_glcdc_interrupt_setting
  47:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Description  : Graphic 1 underflow, Graphic 2 underflow, Graphic 2 line detection
  48:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *                interrupt setting.
  49:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Arguments    : p_interrupt -
  50:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *                  Enable or disable of each interrupt.
  51:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Return Value : none
  52:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  * Note         : none
  53:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****  *******************************************************************************/
  54:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** void r_glcdc_interrupt_setting(glcdc_interrupt_cfg_t const * const p_interrupt)
  55:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** {
  11                             		.loc 1 55 1 view -0
  12                             		.loc 1 55 1 is_stmt 0 view .LVU1
  13 0000 7E A7                   		push.l	r7
  14                             	.LCFI0:
  15 0002 60 80                   		sub	#8, r0
  16                             	.LCFI1:
  17 0004 EF 17                   		mov.L	r1, r7
  56:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     bsp_int_ctrl_t grpal1;
  18                             		.loc 1 56 5 is_stmt 1 view .LVU2
  57:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  58:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
  59:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     bsp_int_ctrl_t int_ctrl;
  19                             		.loc 1 59 5 view .LVU3
  60:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
  61:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  62:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     grpal1.ipl = GLCDC_CFG_INTERRUPT_PRIORITY_LEVEL;
  20                             		.loc 1 62 5 view .LVU4
  21                             		.loc 1 62 16 is_stmt 0 view .LVU5
  22 0006 F8 06 05                		mov.L	#5, [r0]
  63:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  64:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     if (true == p_interrupt->vpos_enable)
  23                             		.loc 1 64 5 is_stmt 1 view .LVU6
  24                             		.loc 1 64 8 is_stmt 0 view .LVU7
  25 0009 58 15                   		movu.B	[r1], r5
  26 000b 61 05                   		cmp	#0, r5
  27 000d 3A D9 00                		beq	.L2
  65:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
  66:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
  67:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b31:b3 Reserved   - These bits are read as 0. Writing to these bits have no effect.
  68:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b2     GR2UFINTEN - GR2UF Interrupt Enable.
  69:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b1     GR1UFINTEN - GR1UF Interrupt Enable.
  70:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b0     VPOSINTEN  - VPOS Interrupt Enable. - Enable VPOS interrupt request. */
  71:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.VPOSINTEN = 1;
  28                             		.loc 1 71 9 is_stmt 1 view .LVU8
  29                             		.loc 1 71 35 is_stmt 0 view .LVU9
  30 0010 FB 5E 00 00 0E          		mov.L	#0xe0000, r5
  31 0015 EE 54 11 05             		mov.L	5188[r5], r4
  32 0019 78 04                   		bset	#0, r4
  33 001b EB 54 11 05             		mov.L	r4, 5188[r5]
  72:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  73:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
  74:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
  34                             		.loc 1 74 9 is_stmt 1 view .LVU10
  35 001f 66 43                   		mov.L	#4, r3
  36 0021 4B 03                   		add	r0, r3
  37 0023 66 62                   		mov.L	#6, r2
  38 0025 75 41 6E                		mov.L	#0x6e, r1
  39                             	.LVL1:
  40                             		.loc 1 74 9 is_stmt 0 view .LVU11
  41 0028 05 00 00 00             		bsr	_R_BSP_InterruptControl
  42                             	.LVL2:
  75:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
  76:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  77:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
  78:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b8 EN8 - Interrupt Request Enable 8 - Interrupt request is enabled. */
  79:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,VPOS) = 1;
  43                             		.loc 1 79 9 is_stmt 1 view .LVU12
  44                             		.loc 1 79 24 is_stmt 0 view .LVU13
  45 002c FB 5E 00 70 08          		mov.L	#0x87000, r5
  46 0031 EE 54 1D 02             		mov.L	2164[r5], r4
  47 0035 78 84                   		bset	#8, r4
  48 0037 EB 54 1D 02             		mov.L	r4, 2164[r5]
  80:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  81:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
  82:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
  49                             		.loc 1 82 9 is_stmt 1 view .LVU14
  50 003b 66 43                   		mov.L	#4, r3
  51 003d 4B 03                   		add	r0, r3
  52 003f 66 52                   		mov.L	#5, r2
  53 0041 75 41 6E                		mov.L	#0x6e, r1
  54 0044 05 00 00 00             		bsr	_R_BSP_InterruptControl
  55                             	.LVL3:
  56                             	.L3:
  83:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
  84:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  85:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
  86:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     else
  87:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
  88:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
  89:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b0 VPOSINTEN  - VPOS Interrupt Enable. - Disable VPOS interrupt request. */
  90:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.VPOSINTEN = 0;
  91:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  92:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
  93:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
  94:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif        
  95:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
  96:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
  97:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b8 EN8 - Interrupt Request Enable 8 - Interrupt request is disabled. */
  98:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,VPOS) = 0;
  99:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 100:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 101:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
 102:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 103:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 104:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GRPAL1 - Group AL1 Interrupt Request Register
 105:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b8 IS8 - Interrupt Status Flag 8. */
 106:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 107:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* WAIT_LOOP */
 108:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         while (0 != IS(GLCDC,VPOS))
 109:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 110:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****             R_BSP_NOP();
 111:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 112:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 113:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 114:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     if (true == p_interrupt->gr1uf_enable)
  57                             		.loc 1 114 5 view .LVU15
  58                             		.loc 1 114 8 is_stmt 0 view .LVU16
  59 0048 B0 7D                   		movu.B	1[r7], r5
  60 004a 61 05                   		cmp	#0, r5
  61 004c 3A E6 00                		beq	.L6
 115:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 116:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
 117:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b1 GR1UFINTEN - GR1UF Interrupt enable. */
 118:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.GR1UFINTEN = 1;
  62                             		.loc 1 118 9 is_stmt 1 view .LVU17
  63                             		.loc 1 118 36 is_stmt 0 view .LVU18
  64 004f FB 5E 00 00 0E          		mov.L	#0xe0000, r5
  65 0054 EE 54 11 05             		mov.L	5188[r5], r4
  66 0058 78 14                   		bset	#1, r4
  67 005a EB 54 11 05             		mov.L	r4, 5188[r5]
 119:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 120:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 121:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
  68                             		.loc 1 121 9 is_stmt 1 view .LVU19
  69 005e 66 43                   		mov.L	#4, r3
  70 0060 4B 03                   		add	r0, r3
  71 0062 66 62                   		mov.L	#6, r2
  72 0064 75 41 6E                		mov.L	#0x6e, r1
  73 0067 05 00 00 00             		bsr	_R_BSP_InterruptControl
  74                             	.LVL4:
 122:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif    
 123:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 124:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
 125:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b9 EN9 - Interrupt Request Enable 9 - Interrupt request is enabled. */
 126:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,GR1UF) = 1;
  75                             		.loc 1 126 9 view .LVU20
  76                             		.loc 1 126 25 is_stmt 0 view .LVU21
  77 006b FB 5E 00 70 08          		mov.L	#0x87000, r5
  78 0070 EE 54 1D 02             		mov.L	2164[r5], r4
  79 0074 78 94                   		bset	#9, r4
  80 0076 EB 54 1D 02             		mov.L	r4, 2164[r5]
 127:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 128:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 129:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
  81                             		.loc 1 129 9 is_stmt 1 view .LVU22
  82 007a 66 43                   		mov.L	#4, r3
  83 007c 4B 03                   		add	r0, r3
  84 007e 66 52                   		mov.L	#5, r2
  85 0080 75 41 6E                		mov.L	#0x6e, r1
  86 0083 05 00 00 00             		bsr	_R_BSP_InterruptControl
  87                             	.LVL5:
  88                             	.L7:
 130:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 131:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 132:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     else
 133:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 134:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
 135:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b1 GR1UFINTEN - GR1UF Interrupt disable. */
 136:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.GR1UFINTEN = 0;
 137:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 138:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 139:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
 140:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif  
 141:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 142:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
 143:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b9 EN9 - Interrupt Request Enable 9 - Interrupt request is disabled. */
 144:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,GR1UF) = 0;
 145:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 146:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 147:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
 148:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 149:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 150:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GRPAL1 - Group AL1 Interrupt Request Register
 151:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b9 IS9 - Interrupt Status Flag 9. */
 152:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 153:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* WAIT_LOOP */
 154:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         while (0 != IS(GLCDC,GR1UF))
 155:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 156:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****             R_BSP_NOP();
 157:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 158:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 159:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 160:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     if (true == p_interrupt->gr2uf_enable)
  89                             		.loc 1 160 5 view .LVU23
  90                             		.loc 1 160 8 is_stmt 0 view .LVU24
  91 0087 B0 F5                   		movu.B	2[r7], r5
  92 0089 61 05                   		cmp	#0, r5
  93 008b 3A F3 00                		beq	.L10
 161:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 162:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
 163:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b2 GR2UFINTEN - GR2UF Interrupt enable. */
 164:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.GR2UFINTEN = 1;
  94                             		.loc 1 164 9 is_stmt 1 view .LVU25
  95                             		.loc 1 164 36 is_stmt 0 view .LVU26
  96 008e FB 5E 00 00 0E          		mov.L	#0xe0000, r5
  97 0093 EE 54 11 05             		mov.L	5188[r5], r4
  98 0097 78 24                   		bset	#2, r4
  99 0099 EB 54 11 05             		mov.L	r4, 5188[r5]
 165:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 166:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 167:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
 100                             		.loc 1 167 9 is_stmt 1 view .LVU27
 101 009d 66 43                   		mov.L	#4, r3
 102 009f 4B 03                   		add	r0, r3
 103 00a1 66 62                   		mov.L	#6, r2
 104 00a3 75 41 6E                		mov.L	#0x6e, r1
 105 00a6 05 00 00 00             		bsr	_R_BSP_InterruptControl
 106                             	.LVL6:
 168:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 169:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 170:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
 171:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b10 EN10 - Interrupt Request Enable 10 - Interrupt request is enabled. */
 172:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,GR2UF) = 1;
 107                             		.loc 1 172 9 view .LVU28
 108                             		.loc 1 172 25 is_stmt 0 view .LVU29
 109 00aa FB 5E 00 70 08          		mov.L	#0x87000, r5
 110 00af EE 54 1D 02             		mov.L	2164[r5], r4
 111 00b3 78 A4                   		bset	#10, r4
 112 00b5 EB 54 1D 02             		mov.L	r4, 2164[r5]
 173:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 174:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 175:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
 113                             		.loc 1 175 9 is_stmt 1 view .LVU30
 114 00b9 66 43                   		mov.L	#4, r3
 115 00bb 4B 03                   		add	r0, r3
 116 00bd 66 52                   		mov.L	#5, r2
 117 00bf 75 41 6E                		mov.L	#0x6e, r1
 118 00c2 05 00 00 00             		bsr	_R_BSP_InterruptControl
 119                             	.LVL7:
 120                             	.L11:
 176:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 177:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 178:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     else
 179:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 180:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* INTEN - Interrupt Request Enable Control Register
 181:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b2 GR2UFINTEN - GR2UF Interrupt disable. */
 182:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         GLCDC.INTEN.BIT.GR2UFINTEN = 0;
 183:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 184:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 185:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_DISABLE, &int_ctrl);
 186:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 187:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 188:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GENAL1 - Group AL1 Interrupt Request Enable Register
 189:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b10 EN10 - Interrupt Request Enable 10 - Interrupt request is disabled. */
 190:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         EN(GLCDC,GR2UF) = 0;
 191:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 192:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #if ((R_BSP_VERSION_MAJOR == 5) && (R_BSP_VERSION_MINOR >= 30)) || (R_BSP_VERSION_MAJOR >= 6)
 193:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_EMPTY, BSP_INT_CMD_FIT_INTERRUPT_ENABLE, &int_ctrl);
 194:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 195:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 196:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* GRPAL1 - Group AL1 Interrupt Request Register
 197:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         b10 IS10 - Interrupt Status Flag 10. */
 198:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         
 199:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         /* WAIT_LOOP */
 200:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         while (0 != IS(GLCDC,GR2UF))
 201:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 202:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****             R_BSP_NOP();
 203:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 204:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 205:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 206:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     /* Set GROUPAL1 interrupt request to enable, if GLCDC interrupt parameter is enabled
 207:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****        Set GROUPAL1 interrupt request to disable, if GLCDC interrupt parameter is disabled */
 208:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     if ((true == p_interrupt->vpos_enable) || (true == p_interrupt->gr1uf_enable) || (true == p_int
 121                             		.loc 1 208 5 view .LVU31
 122                             		.loc 1 208 8 is_stmt 0 view .LVU32
 123 00c6 58 75                   		movu.B	[r7], r5
 124 00c8 61 05                   		cmp	#0, r5
 125 00ca 21 0E                   		bne	.L14
 126                             		.loc 1 208 44 discriminator 1 view .LVU33
 127 00cc B0 7D                   		movu.B	1[r7], r5
 128 00ce 61 05                   		cmp	#0, r5
 129 00d0 18                      		bne	.L14
 130                             		.loc 1 208 83 discriminator 2 view .LVU34
 131 00d1 B0 F7                   		movu.B	2[r7], r7
 132                             	.LVL8:
 133                             		.loc 1 208 83 discriminator 2 view .LVU35
 134 00d3 61 07                   		cmp	#0, r7
 135 00d5 3A F7 00                		beq	.L15
 136                             	.L14:
 209:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 210:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_AL1_GLCDC_VPOS, BSP_INT_CMD_GROUP_INTERRUPT_ENABLE, (voi
 137                             		.loc 1 210 9 is_stmt 1 view .LVU36
 138 00d8 EF 03                   		mov.L	r0, r3
 139 00da 66 32                   		mov.L	#3, r2
 140 00dc 75 41 69                		mov.L	#0x69, r1
 141 00df 05 00 00 00             		bsr	_R_BSP_InterruptControl
 142                             	.LVL9:
 143                             	.L1:
 211:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 212:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     else
 213:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     {
 214:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         R_BSP_InterruptControl(BSP_INT_SRC_AL1_GLCDC_VPOS, BSP_INT_CMD_GROUP_INTERRUPT_DISABLE, NUL
 215:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 216:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 217:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** } /* End of function r_glcdc_interrupt_setting() */
 144                             		.loc 1 217 1 is_stmt 0 view .LVU37
 145 00e3 3F 77 03                		rtsd	#12, r7-r7
 146                             	.LVL10:
 147                             	.L2:
  90:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 148                             		.loc 1 90 9 is_stmt 1 view .LVU38
  90:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 149                             		.loc 1 90 35 is_stmt 0 view .LVU39
 150 00e6 FB 5E 00 00 0E          		mov.L	#0xe0000, r5
 151 00eb EE 54 11 05             		mov.L	5188[r5], r4
 152 00ef 7A 04                   		bclr	#0, r4
 153 00f1 EB 54 11 05             		mov.L	r4, 5188[r5]
  93:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif        
 154                             		.loc 1 93 9 is_stmt 1 view .LVU40
 155 00f5 66 43                   		mov.L	#4, r3
 156 00f7 4B 03                   		add	r0, r3
 157 00f9 66 62                   		mov.L	#6, r2
 158 00fb 75 41 6E                		mov.L	#0x6e, r1
 159                             	.LVL11:
  93:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif        
 160                             		.loc 1 93 9 is_stmt 0 view .LVU41
 161 00fe 05 00 00 00             		bsr	_R_BSP_InterruptControl
 162                             	.LVL12:
  98:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 163                             		.loc 1 98 9 is_stmt 1 view .LVU42
  98:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 164                             		.loc 1 98 24 is_stmt 0 view .LVU43
 165 0102 FB 5E 00 70 08          		mov.L	#0x87000, r5
 166 0107 EE 54 1D 02             		mov.L	2164[r5], r4
 167 010b 7A 84                   		bclr	#8, r4
 168 010d EB 54 1D 02             		mov.L	r4, 2164[r5]
 101:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 169                             		.loc 1 101 9 is_stmt 1 view .LVU44
 170 0111 66 43                   		mov.L	#4, r3
 171 0113 4B 03                   		add	r0, r3
 172 0115 66 52                   		mov.L	#5, r2
 173 0117 75 41 6E                		mov.L	#0x6e, r1
 174 011a 05 00 00 00             		bsr	_R_BSP_InterruptControl
 175                             	.LVL13:
 108:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 176                             		.loc 1 108 9 view .LVU45
 177                             	.L4:
 108:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 178                             		.loc 1 108 21 is_stmt 0 view .LVU46
 179 011e FB 5E 00 70 08          		mov.L	#0x87000, r5
 180 0123 EE 55 0D 02             		mov.L	2100[r5], r5
 108:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 181                             		.loc 1 108 15 view .LVU47
 182 0127 FD 78 C5 00 01          		tst	#0x100, r5
 183 012c 3A 1C FF                		beq	.L3
 110:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 184                             		.loc 1 110 13 is_stmt 1 view .LVU48
 185                             	 ; 110 "../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c" 1
 186 012f 03                      		nop
 187                             	 ; 0 "" 2
 188 0130 2E EE                   		bra	.L4
 189                             	.L6:
 136:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 190                             		.loc 1 136 9 view .LVU49
 136:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 191                             		.loc 1 136 36 is_stmt 0 view .LVU50
 192 0132 FB 5E 00 00 0E          		mov.L	#0xe0000, r5
 193 0137 EE 54 11 05             		mov.L	5188[r5], r4
 194 013b 7A 14                   		bclr	#1, r4
 195 013d EB 54 11 05             		mov.L	r4, 5188[r5]
 139:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif  
 196                             		.loc 1 139 9 is_stmt 1 view .LVU51
 197 0141 66 43                   		mov.L	#4, r3
 198 0143 4B 03                   		add	r0, r3
 199 0145 66 62                   		mov.L	#6, r2
 200 0147 75 41 6E                		mov.L	#0x6e, r1
 201 014a 05 00 00 00             		bsr	_R_BSP_InterruptControl
 202                             	.LVL14:
 144:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 203                             		.loc 1 144 9 view .LVU52
 144:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 204                             		.loc 1 144 25 is_stmt 0 view .LVU53
 205 014e FB 5E 00 70 08          		mov.L	#0x87000, r5
 206 0153 EE 54 1D 02             		mov.L	2164[r5], r4
 207 0157 7A 94                   		bclr	#9, r4
 208 0159 EB 54 1D 02             		mov.L	r4, 2164[r5]
 147:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 209                             		.loc 1 147 9 is_stmt 1 view .LVU54
 210 015d 66 43                   		mov.L	#4, r3
 211 015f 4B 03                   		add	r0, r3
 212 0161 66 52                   		mov.L	#5, r2
 213 0163 75 41 6E                		mov.L	#0x6e, r1
 214 0166 05 00 00 00             		bsr	_R_BSP_InterruptControl
 215                             	.LVL15:
 154:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 216                             		.loc 1 154 9 view .LVU55
 217                             	.L8:
 154:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 218                             		.loc 1 154 21 is_stmt 0 view .LVU56
 219 016a FB 5E 00 70 08          		mov.L	#0x87000, r5
 220 016f EE 55 0D 02             		mov.L	2100[r5], r5
 154:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 221                             		.loc 1 154 15 view .LVU57
 222 0173 FD 78 C5 00 02          		tst	#0x200, r5
 223 0178 3A 0F FF                		beq	.L7
 156:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 224                             		.loc 1 156 13 is_stmt 1 view .LVU58
 225                             	 ; 156 "../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c" 1
 226 017b 03                      		nop
 227                             	 ; 0 "" 2
 228 017c 2E EE                   		bra	.L8
 229                             	.L10:
 182:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 230                             		.loc 1 182 9 view .LVU59
 182:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 231                             		.loc 1 182 36 is_stmt 0 view .LVU60
 232 017e FB 5E 00 00 0E          		mov.L	#0xe0000, r5
 233 0183 EE 54 11 05             		mov.L	5188[r5], r4
 234 0187 7A 24                   		bclr	#2, r4
 235 0189 EB 54 11 05             		mov.L	r4, 5188[r5]
 185:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 236                             		.loc 1 185 9 is_stmt 1 view .LVU61
 237 018d 66 43                   		mov.L	#4, r3
 238 018f 4B 03                   		add	r0, r3
 239 0191 66 62                   		mov.L	#6, r2
 240 0193 75 41 6E                		mov.L	#0x6e, r1
 241 0196 05 00 00 00             		bsr	_R_BSP_InterruptControl
 242                             	.LVL16:
 190:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 243                             		.loc 1 190 9 view .LVU62
 190:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** 
 244                             		.loc 1 190 25 is_stmt 0 view .LVU63
 245 019a FB 5E 00 70 08          		mov.L	#0x87000, r5
 246 019f EE 54 1D 02             		mov.L	2164[r5], r4
 247 01a3 7A A4                   		bclr	#10, r4
 248 01a5 EB 54 1D 02             		mov.L	r4, 2164[r5]
 193:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c **** #endif
 249                             		.loc 1 193 9 is_stmt 1 view .LVU64
 250 01a9 66 43                   		mov.L	#4, r3
 251 01ab 4B 03                   		add	r0, r3
 252 01ad 66 52                   		mov.L	#5, r2
 253 01af 75 41 6E                		mov.L	#0x6e, r1
 254 01b2 05 00 00 00             		bsr	_R_BSP_InterruptControl
 255                             	.LVL17:
 200:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 256                             		.loc 1 200 9 view .LVU65
 200:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 257                             		.loc 1 200 15 is_stmt 0 view .LVU66
 258 01b6 2E 03                   		bra	.L12
 259                             	.L13:
 202:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         }
 260                             		.loc 1 202 13 is_stmt 1 view .LVU67
 261                             	 ; 202 "../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c" 1
 262 01b8 03                      		nop
 263                             	 ; 0 "" 2
 264                             	.L12:
 200:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 265                             		.loc 1 200 21 is_stmt 0 view .LVU68
 266 01b9 FB 5E 00 70 08          		mov.L	#0x87000, r5
 267 01be EE 55 0D 02             		mov.L	2100[r5], r5
 200:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****         {
 268                             		.loc 1 200 15 view .LVU69
 269 01c2 FD 78 C5 00 04          		tst	#0x400, r5
 270 01c7 21 F1                   		bne	.L13
 271 01c9 38 FD FE                		bra	.L11
 272                             	.LVL18:
 273                             	.L15:
 214:../src/smc_gen/r_glcdc_rx/src/targets/rx72n/r_glcdc_rx72n.c ****     }
 274                             		.loc 1 214 9 is_stmt 1 view .LVU70
 275 01cc 66 03                   		mov.L	#0, r3
 276 01ce 66 42                   		mov.L	#4, r2
 277 01d0 75 41 69                		mov.L	#0x69, r1
 278 01d3 05 00 00 00             		bsr	_R_BSP_InterruptControl
 279                             	.LVL19:
 280                             		.loc 1 217 1 is_stmt 0 view .LVU71
 281 01d7 38 0C FF                		bra	.L1
 282                             	.LFE3:
 320                             	.Letext0:
 321                             		.file 2 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 322                             		.file 3 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 323                             		.file 4 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-
 324                             		.file 5 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 325                             		.file 6 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 326                             		.file 7 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 327                             		.file 8 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_bsp/mcu/all/r_rx_compi
 328                             		.file 9 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_bsp/mcu/rx72n/register
 329                             		.file 10 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_bsp/mcu/rx72n/mcu_loc
 330                             		.file 11 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_bsp/mcu/rx72n/mcu_int
 331                             		.file 12 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_glcdc_rx/r_glcdc_rx_i
 332                             		.file 13 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_bsp/mcu/all/r_bsp_int
