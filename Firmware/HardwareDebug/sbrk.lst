   1                             		.file	"sbrk.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.sbrk,"ax",@progbits
   5                             		.global	_sbrk
   7                             	_sbrk:
   8                             	.LVL0:
   9                             	.LFB3:
  10                             		.file 1 "../src/smc_gen/r_bsp/mcu/all/sbrk.c"
   1:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
   2:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * DISCLAIMER
   3:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prote
   5:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * applicable laws, including copyright laws.
   6:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF 
   8:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIM
   9:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AF
  10:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY RE
  11:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * this software. By using this software, you agree to the additional terms and conditions found by 
  14:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * following link:
  15:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * http://www.renesas.com/disclaimer
  16:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *
  17:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Copyright (C) 2013 Renesas Electronics Corporation. All rights reserved.
  18:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  19:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  20:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * File Name    : sbrk.c
  21:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Description  : Configures the MCU heap memory.  The size of the heap is defined by the macro HEAP
  22:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  23:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  24:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * History : DD.MM.YYYY Version  Description
  25:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *         : 28.02.2019 3.00     Merged processing of all devices.
  26:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *                               Added support for GNUC and ICCRX.
  27:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *                               Fixed coding style.
  28:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *         : 26.07.2019 3.01     Fixed coding style.
  29:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  30:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  31:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  32:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** Includes   <System Includes> , "Project Includes"
  33:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  34:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #include "sbrk.h"
  35:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  36:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* Only use this file if heap is enabled in r_bsp_config. */
  37:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #if BSP_CFG_HEAP_BYTES > 0
  38:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  39:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* When using the user startup program, disable the following code. */
  40:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #if BSP_CFG_STARTUP_DISABLE == 0
  41:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  42:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #if defined(__CCRX__) || defined(__GNUC__)
  43:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  44:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  45:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** Macro definitions
  46:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  47:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  48:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  49:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** Typedef definitions
  50:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  51:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  52:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  53:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** Exported global variables (to be accessed by other files)
  54:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  55:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  56:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  57:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** Private global variables and functions
  58:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  59:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* Declare memory heap area */
  60:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** static u_heap_type_t s_heap_area;
  61:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  62:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* End address allocated by sbrk (CC-RX and GNURX+NEWLIB) */
  63:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** static int8_t *sp_brk=(int8_t *)&s_heap_area;
  64:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  65:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #if defined(__GNUC__)
  66:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* Start address of allocated heap area (GNURX+OPTLIB only) */
  67:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** int8_t *_heap_of_memory=(int8_t *)&s_heap_area;
  68:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /* End address of allocated heap area (GNURX+OPTLIB only) */
  69:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** int8_t *_last_heap_object=(int8_t *)&s_heap_area;
  70:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #endif /* defined(__GNUC__) */
  71:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  72:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
  73:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Function name: sbrk
  74:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Description  : This function configures MCU memory area allocation. (CC-RX and GNURX+NEWLIB)
  75:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Arguments    : size - 
  76:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *                    assigned area size
  77:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Return value : Start address of allocated area (pass)
  78:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** *                -1 (failure)
  79:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
  80:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** int8_t  *sbrk(size_t size)
  81:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** {
  11                             		.loc 1 81 1 view -0
  82:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     int8_t  *p_area;
  12                             		.loc 1 82 5 view .LVU1
  83:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  84:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     if ((sp_brk + size) > (s_heap_area.heap + BSP_CFG_HEAP_BYTES))
  13                             		.loc 1 84 5 view .LVU2
  14                             		.loc 1 84 17 is_stmt 0 view .LVU3
  15 0000 FB 52 00 00 00 00       		mov.L	#_sp_brk, r5
  16 0006 EC 55                   		mov.L	[r5], r5
  17 0008 4B 51                   		add	r5, r1
  18                             	.LVL1:
  19                             		.loc 1 84 8 view .LVU4
  20 000a 74 01 00 40 00 00       		cmp	#_s_heap_area+16384, r1
  21 0010 24 0B                   		bgtu	.L3
  85:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     {
  86:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         /* Empty area size  */
  87:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         p_area = (int8_t *)-1;
  88:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     }
  89:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     else
  90:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     {
  91:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         /* Area assignment */
  92:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         p_area = sp_brk;
  22                             		.loc 1 92 9 is_stmt 1 view .LVU5
  23                             	.LVL2:
  93:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  94:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         /* End address update */
  95:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****         sp_brk += size;
  24                             		.loc 1 95 9 view .LVU6
  25                             		.loc 1 95 16 is_stmt 0 view .LVU7
  26 0012 FB 42 00 00 00 00       		mov.L	#_sp_brk, r4
  27 0018 E3 41                   		mov.L	r1, [r4]
  28 001a 0C                      		bra	.L1
  29                             	.LVL3:
  30                             	.L3:
  87:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     }
  31                             		.loc 1 87 16 view .LVU8
  32 001b FB 56 FF                		mov.L	#-1, r5
  33                             	.LVL4:
  96:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     }
  97:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
  98:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     /* Return result */
  99:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     return p_area;
  34                             		.loc 1 99 5 is_stmt 1 view .LVU9
  35                             	.L1:
 100:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** } /* End of function sbrk() */
  36                             		.loc 1 100 1 is_stmt 0 view .LVU10
  37 001e EF 51                   		mov.L	r5, r1
  38 0020 02                      		rts
  39                             	.LFE3:
  41                             		.section	.text._top_of_heap,"ax",@progbits
  42                             		.global	__top_of_heap
  44                             	__top_of_heap:
  45                             	.LFB4:
 101:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** 
 102:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** #if defined(__GNUC__)
 103:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** /**************************************************************************************************
 104:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Function name: _top_of_heap
 105:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Description  : This function returns end address of reserved heap area. (GNURX+OPTLIB only)
 106:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Arguments    : none
 107:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** * Return value : End address of reserved heap area
 108:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** ***************************************************************************************************
 109:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** int8_t *_top_of_heap(void)
 110:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** {
  46                             		.loc 1 110 1 is_stmt 1 view -0
 111:../src/smc_gen/r_bsp/mcu/all/sbrk.c ****     return (int8_t *)(s_heap_area.heap + BSP_CFG_HEAP_BYTES);
  47                             		.loc 1 111 5 view .LVU12
 112:../src/smc_gen/r_bsp/mcu/all/sbrk.c **** } /* End of function End of function sbrk()() */
  48                             		.loc 1 112 1 is_stmt 0 view .LVU13
  49 0000 FB 12 00 40 00 00       		mov.L	#_s_heap_area+16384, r1
  50 0006 02                      		rts
  51                             	.LFE4:
  53                             		.global	__last_heap_object
  54                             		.section	.data._last_heap_object,"aw"
  55                             		.balign 4
  58                             	__last_heap_object:
  59 0000 00 00 00 00             		.long	_s_heap_area
  60                             		.global	__heap_of_memory
  61                             		.section	.data._heap_of_memory,"aw"
  62                             		.balign 4
  65                             	__heap_of_memory:
  66 0000 00 00 00 00             		.long	_s_heap_area
  67                             		.section	.data.sp_brk,"aw"
  68                             		.balign 4
  71                             	_sp_brk:
  72 0000 00 00 00 00             		.long	_s_heap_area
  73                             		.section	.bss.s_heap_area,"aw",@nobits
  74                             		.balign 4
  77                             	_s_heap_area:
  78 0000 00 00 00 00 00 00 00 00 		.zero	16384
  78      00 00 00 00 00 00 00 00 
  78      00 00 00 00 00 00 00 00 
  78      00 00 00 00 00 00 00 00 
  78      00 00 00 00 00 00 00 00 
  79                             		.comm	__s1ptr,4,4
 114                             	.Letext0:
 115                             		.file 2 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 116                             		.file 3 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 117                             		.file 4 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\lib\\gcc\\rx-
 118                             		.file 5 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 119                             		.file 6 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 120                             		.file 7 "c:\\programdata\\gcc for renesas rx 8.3.0.202311-gnurx-elf\\rx-elf\\rx-elf\\rx-elf\\inclu
 121                             		.file 8 "../src/smc_gen/r_bsp/mcu/all/sbrk.h"
