   1                             		.file	"dave_blit.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text.d2_setblitsrc,"ax",@progbits
   5                             		.global	_d2_setblitsrc
   7                             	_d2_setblitsrc:
   8                             	.LVL0:
   9                             	.LFB6:
  10                             		.file 1 "../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c"
   1:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
   2:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Project: D/AVE
   3:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * File:    dave_blit.c (%version: 15 %)
   4:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *          created Wed Jan 19 13:09:06 2005 by hh04027
   5:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
   6:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Description:
   7:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  %date_modified: Tue Feb 13 17:14:11 2007 %  (%derived_by:  hh74036 %)
   8:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
   9:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Changes:
  10:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2006-03-08 CSe  added argb1555 format
  11:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2007-09-18 ASc  fix: removed duplicate alpha calculation in d2_blitcopy
  12:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2007-09-20 ASc  changed comments from C++ to C, added wrapping for blits
  13:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2008-05-21 CSe  corrected documentation for d2_setblitsrc 
  14:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2008-06-13 MRe  RLE unit, CLUT256, subbyte formats, color keying
  15:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2008-07-17 MRe  added RGBA formats
  16:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2008-11-26 MRe  quick fix for texture width up to 2047 
  17:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2009-03-06 MRe  fix for texture width up to 2048 
  18:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2011-03-11 MRe  improved/removed context backup for blit
  19:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2011-06-16 MRe  added Alpha4, Alpha2, Alpha1 texture formats
  20:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2012-09-05 MRe  added check for Alpha4, Alpha2, Alpha1 texture formats
  21:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *  2012-09-25 BSp  MISRA cleanup
  22:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  */
  23:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  24:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
  25:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  26:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Title: Blit Functions
  27:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * BLock Image Transfer operations
  28:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  29:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Blit's are special <Rendering Functions> to copy one rectangle part of
  30:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * the video memory into another part of the video memory.
  31:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * The operation could be performed using texturemapping and boxrendering as
  32:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * well, but the blit interface avoids setting and restoring all necessary
  33:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * context states.
  34:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  35:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Texel-to-pixel mapping:
  36:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Conceptually textures are seen the same way as a raster display: 
  37:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Each texel is defined at the exact center of a grid cell.
  38:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * The driver maps the left border of the left-most texel to the left border 
  39:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * of the left-most destination pixel and the right border of the right-most 
  40:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * texel to the right border of the right-most destination pixel.
  41:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  42:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Example: 
  43:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Find below an example of resizing a source texture with filtering enabled.
  44:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * - A source image (3x1) is stretched to a destination rectangle (5x1).
  45:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * - A source image (5x1) is downsized to a destination rectangle (3x1).
  46:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * (see blit_mapping.png)
  47:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  48:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Please not that the texel-to-pixel mapping implementation has changed 
  49:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * for the magnification case since D2 Driver version 3.10.
  50:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  51:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *-------------------------------------------------------------------------- */
  52:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  53:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #include "dave_driver.h"
  54:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #include "dave_intern.h"
  55:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #include "dave_texture.h"
  56:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #include "dave_registermap.h"
  57:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #include "dave_box.h"
  58:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  59:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
  60:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  61:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * */
  62:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  63:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #define D2_CHECKERR_BLITWIDTH(x) D2_CHECKERR( (x)<=(1024*2) , D2_INVALIDWIDTH )  /* PRQA S 4130, 31
  64:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #define D2_CHECKERR_BLITHEIGHT(y) D2_CHECKERR( (y)<=1024 , D2_INVALIDHEIGHT )    /* PRQA S 4130, 31
  65:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #define D2_CHECKERR_BLITPITCH(p) D2_CHECKERR( (p)<65536 , D2_VALUETOOBIG )       /* PRQA S 4130, 31
  66:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #define D2_CHECKERR_BLITSRCPOSX(x) D2_CHECKERR( (p)<65536 , D2_VALUETOOBIG )     /* PRQA S 4130, 31
  67:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  68:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  69:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
  70:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Group: BLIT Attributes Writes */
  71:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  72:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
  73:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
  74:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * function: d2_setblitsrc
  75:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Specify the source for blit operation.
  76:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  77:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * parameters:
  78:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   handle - device pointer (see: <d2_opendevice>)
  79:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   ptr - address of the top left texel (coordinate 0,0)
  80:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   pitch - number of pixels (*not bytes*) per scanline
  81:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   width - width of bitmap in pixels (equal or less than pitch)
  82:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   height - height of bitmap in pixels
  83:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   format - pixel encoding type (bitmap format)
  84:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  85:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * bitmap formats:
  86:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
  87:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_alpha8   - monochrome 8bit per pixel
  88:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_alpha4    - monochrome 4bit per pixel
  89:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_alpha2    - monochrome 2bit per pixel
  90:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_alpha1    - monochrome 1bit per pixel
  91:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgb565   - colored 16bit per pixel (alpha is blue)
  92:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_argb8888 - colored 32bit per pixel
  93:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgba8888 - colored 32bit per pixel
  94:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgb888   -  (same as d2_mode_argb8888, in case of RLE textures 24bit pixel are decoded
  95:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_argb4444 - colored 16bit per pixel
  96:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgba4444 - colored 16bit per pixel
  97:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgb444   -  (same as d2_mode_argb4444)
  98:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_argb1555 - colored 16bit per pixel
  99:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgba5551 - colored 16bit per pixel
 100:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rgb555   -  (same as d2_mode_argb1555)
 101:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_ai44     - colored, palletized 8bit per pixel, (4 bit alpha, 4 bit indexed RGB: see <d
 102:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_i8        - colored, palletized 8bit per pixel (palette is used if d2_mode_clut is als
 103:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_i4        - colored, palletized 4bit per pixel (palette is used if d2_mode_clut is als
 104:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_i2        - colored, palletized 2bit per pixel (palette is used if d2_mode_clut is als
 105:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_i1        - colored, palletized 1bit per pixel (palette is used if d2_mode_clut is als
 106:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 107:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * additional flags (can be combined with all above formats) :
 108:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 109:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_rle      -  Enables the RLE unit (available if the feature bit D2FB_RLEUNIT is set (se
 110:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_mode_clut     -  Enables the color look up table (for d2_mode_i8 through d2_mode_i1) (see <
 111:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 112:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Modes d2_mode_rgb888, d2_mode_rgb444 and d2_mode_rgb555 can be used as well. Alpha information h
 113:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * be ignored by not selecting the flag d2_bf_usealpha when calling <d2_blitcopy>.
 114:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 115:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * If the CLUT is not enabled with an indexed color format (d2_mode_i8 to d2_mode_i1), the index is
 116:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * The index can be combined with the offset, see <d2_settexclut_offset>.
 117:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 118:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * In case of d2_mode_alpha4 to d2_mode_alpha1 bits are MSB aligned and replicated to the lower bit
 119:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 120:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * returns:
 121:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   errorcode (D2_OK if successful) see list of <Errorcodes> for details
 122:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 123:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * note:
 124:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * width can be max 2048 pixel, height can be max 1024 pixel. 
 125:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 126:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   Please notice that a cache flush using 'd1_cacheblockflush' might be necessary if memory conte
 127:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   To avoid problems you can use the d1 driver memory management functions 'd1_copytovidmem' or '
 128:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   which implicitly do a cache flush.
 129:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * */
 130:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** d2_s32 d2_setblitsrc( d2_device *handle, void *ptr, d2_s32 pitch, d2_s32 width, d2_s32 height, d2_u
 131:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** {
  11                             		.loc 1 131 1 view -0
  12                             		.loc 1 131 1 is_stmt 0 view .LVU1
  13 0000 7E A7                   		push.l	r7
  14                             	.LCFI0:
  15                             		.loc 1 131 1 view .LVU2
  16 0002 60 80                   		sub	#8, r0
  17                             	.LCFI1:
  18 0004 75 47 10                		mov.L	#16, r7
  19 0007 4B 07                   		add	r0, r7
  20 0009 EC 7F                   		mov.L	[r7], r15
  21 000b A8 7D                   		mov.L	4[r7], r5
 132:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_contextdata *ctx;
  22                             		.loc 1 132 4 is_stmt 1 view .LVU3
 133:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags = format & ~d2_mode_rle & ~d2_mode_clut;
  23                             		.loc 1 133 4 view .LVU4
  24                             		.loc 1 133 11 is_stmt 0 view .LVU5
  25 000d FB E6 CF                		mov.L	#-49, r14
  26 0010 53 5E                   		and	r5, r14
  27                             	.LVL1:
 134:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( handle, D2_INVALIDDEVICE ); /* PRQA S 4130, 3112 */ /* $Misra: #DEBUG_MACRO $*/
  28                             		.loc 1 134 4 is_stmt 1 view .LVU6
 135:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_CHECKERR( ptr, D2_NOVIDEOMEM );       /* PRQA S 4130, 3112 */ /* $Misra: #DEBUG_MACRO $*/
  29                             		.loc 1 135 4 view .LVU7
 136:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_CHECKERR_BLITPITCH( pitch );          /* PRQA S 4130, 3112 */ /* $Misra: #DEBUG_MACRO $*/
  30                             		.loc 1 136 4 view .LVU8
 137:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_CHECKERR_BLITWIDTH( width );          /* PRQA S 4130, 3112 */ /* $Misra: #DEBUG_MACRO $*/
  31                             		.loc 1 137 4 view .LVU9
 138:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_CHECKERR_BLITHEIGHT( height );        /* PRQA S 4130, 3112 */ /* $Misra: #DEBUG_MACRO $*/
  32                             		.loc 1 138 4 view .LVU10
 139:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 140:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 141:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if ( (0 != (format & d2_mode_rle)) && (0 == ((D2_DEV(handle)->hwrevision) & D2FB_RLEUNIT)) )
  33                             		.loc 1 141 4 view .LVU11
  34                             		.loc 1 141 7 is_stmt 0 view .LVU12
  35 0012 FD 74 C5 10             		tst	#16, r5
  36 0016 20 0E                   		beq	.L2
  37                             		.loc 1 141 64 discriminator 1 view .LVU13
  38 0018 ED 17 20                		mov.L	128[r1], r7
  39                             		.loc 1 141 39 discriminator 1 view .LVU14
  40 001b FD 70 C7 00 00 80 00    		tst	#0x800000, r7
  41 0022 20 41                   		beq	.L7
  42                             	.L2:
 142:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 143:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       D2_RETERR( handle, D2_ILLEGALMODE );
 144:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 145:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 146:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if ( (0 != (format & d2_mode_clut)) && (0 == ((D2_DEV(handle)->hwrevision) & D2FB_TEXCLUT)) )
  43                             		.loc 1 146 4 is_stmt 1 view .LVU15
  44                             		.loc 1 146 7 is_stmt 0 view .LVU16
  45 0024 FD 74 C5 20             		tst	#32, r5
  46 0028 20 0D                   		beq	.L4
  47                             		.loc 1 146 65 discriminator 1 view .LVU17
  48 002a ED 17 20                		mov.L	128[r1], r7
  49                             		.loc 1 146 40 discriminator 1 view .LVU18
  50 002d FD 7C C7 00 00 20       		tst	#0x200000, r7
  51 0033 20 39                   		beq	.L8
  52                             	.L4:
 147:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 148:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       D2_RETERR( handle, D2_ILLEGALMODE );
 149:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 150:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 151:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if ( (   (format_noflags == d2_mode_alpha4) 
  53                             		.loc 1 151 4 is_stmt 1 view .LVU19
 152:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             || (format_noflags == d2_mode_alpha2) 
 153:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             || (format_noflags == d2_mode_alpha1) )
  54                             		.loc 1 153 13 is_stmt 0 view .LVU20
  55 0035 60 DE                   		sub	#13, r14
  56                             	.LVL2:
 151:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             || (format_noflags == d2_mode_alpha2) 
  57                             		.loc 1 151 7 view .LVU21
  58 0037 61 2E                   		cmp	#2, r14
  59 0039 24 14                   		bgtu	.L5
 154:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****         && ( (0 == (D2_DEV(handle)->hwrevision & D2FB_SWDAVE)) && ((D2_DEV(handle)->hwrevision & 0x
  60                             		.loc 1 154 35 view .LVU22
  61 003b ED 17 20                		mov.L	128[r1], r7
  62                             		.loc 1 154 9 view .LVU23
  63 003e FD 7C C7 00 00 01       		tst	#0x10000, r7
  64 0044 19                      		bne	.L5
  65                             		.loc 1 154 96 discriminator 1 view .LVU24
  66 0045 76 27 FF 00             		and #0xff, r7
  67                             		.loc 1 154 64 discriminator 1 view .LVU25
  68 0049 61 97                   		cmp	#9, r7
  69 004b 25 2A                   		bleu	.L9
  70                             	.L5:
 155:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 156:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       D2_RETERR( handle, D2_ILLEGALMODE );
 157:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 158:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 159:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 160:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx = D2_DEV(handle)->ctxselected;
  71                             		.loc 1 160 4 is_stmt 1 view .LVU26
  72                             		.loc 1 160 8 is_stmt 0 view .LVU27
  73 004d AA 19                   		mov.L	36[r1], r1
  74                             	.LVL3:
 161:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 162:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx->blit_src    = ptr;
  75                             		.loc 1 162 4 is_stmt 1 view .LVU28
  76                             		.loc 1 162 21 is_stmt 0 view .LVU29
  77 004f E7 12 5A                		mov.L	r2, 360[r1]
 163:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx->blit_pitch  = pitch;
  78                             		.loc 1 163 4 is_stmt 1 view .LVU30
  79                             		.loc 1 163 21 is_stmt 0 view .LVU31
  80 0052 E7 13 5B                		mov.L	r3, 364[r1]
 164:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx->blit_width  = width;
  81                             		.loc 1 164 4 is_stmt 1 view .LVU32
  82                             		.loc 1 164 21 is_stmt 0 view .LVU33
  83 0055 E7 14 5C                		mov.L	r4, 368[r1]
 165:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx->blit_height = height;
  84                             		.loc 1 165 4 is_stmt 1 view .LVU34
  85                             		.loc 1 165 21 is_stmt 0 view .LVU35
  86 0058 E7 1F 5D                		mov.L	r15, 372[r1]
 166:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx->blit_format = format;
  87                             		.loc 1 166 4 is_stmt 1 view .LVU36
  88                             		.loc 1 166 21 is_stmt 0 view .LVU37
  89 005b E7 15 5E                		mov.L	r5, 376[r1]
 167:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 168:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    return D2_OK;
  90                             		.loc 1 168 4 is_stmt 1 view .LVU38
  91                             		.loc 1 168 11 is_stmt 0 view .LVU39
  92 005e 66 01                   		mov.L	#0, r1
  93                             	.LVL4:
  94                             		.balign 8,3,2
  95                             	.L1:
 169:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** }
  96                             		.loc 1 169 1 view .LVU40
  97 0060 3F 77 03                		rtsd	#12, r7-r7
  98                             	.LVL5:
  99                             	.L7:
 143:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 100                             		.loc 1 143 7 is_stmt 1 view .LVU41
 101                             	.LBB10:
 102                             	.LBI10:
 103                             		.file 2 "../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h"
   1:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*--------------------------------------------------------------------------
   2:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Project: D/AVE
   3:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * File:    dave_intern.h (%version: 29 %)
   4:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *          created Tue Jan 11 12:57:48 2005 by hh04027
   5:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *
   6:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Description:
   7:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  %date_modified: Thu Jan 25 18:12:54 2007 %  (%derived_by:  hh74026 %)
   8:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *
   9:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Changes:
  10:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2005-12-22 CSe  removed transfermode field, added flags field in _d2_devicedata
  11:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2006-02-16 CSe  added performance counter support
  12:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2006-10-30 CSe  removed waitdlist flag
  13:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2006-11-07 CSe  removed waitdlist flag
  14:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2006-11-07 CSe  added dlist_buffer to device struct for 'd2_df_low_localmem' mode
  15:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2007-01-26 CSe  made 'low localmem' mode configurable
  16:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2007-05-23 MGe  added delayed_errorcode to context
  17:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2008-01-14 ASc  changed comments from C++ to C, removed tabs
  18:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2008-11-24 AJ   Added support for IAR compiler
  19:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2011-09-05 MRe  added cr2 register to device structure
  20:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *  2012-09-25 BSp  MISRA cleanup
  21:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  *-------------------------------------------------------------------------- */
  22:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  23:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifndef __1_dave_intern_h_H
  24:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define __1_dave_intern_h_H
  25:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  26:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * define inline modifier if available */
  27:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef _MSC_VER
  28:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_INLINE __forceinline
  29:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #else
  30:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef __CA850__
  31:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_INLINE
  32:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #elif defined(__ICCV850__)
  33:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_INLINE _Pragma("inline")
  34:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #else
  35:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_INLINE inline
  36:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  37:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  38:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  39:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  40:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * define null to become independent of stdlib */
  41:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifndef NULL
  42:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef __cplusplus
  43:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define NULL    0
  44:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #else
  45:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define NULL    ((void *)0)
  46:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  47:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  48:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  49:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  50:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * internally used types */
  51:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  52:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef _MSC_VER
  53:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef __int64 d2_int64;
  54:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #elif (defined(__CA850__) || defined(__ICC850__))
  55:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define _NO_LL_
  56:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef struct {
  57:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32 low32;
  58:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32 high32;
  59:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** } d2_int64;
  60:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #else
  61:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef long long d2_int64;
  62:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  63:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  64:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  65:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * use separate context for blit 
  66:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  see also d2_df_no_blitctxbackup and d2_bf_no_blitctxbackup*/
  67:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  68:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*
  69:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_USEBLITBACKUPCONTEXT 
  70:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** */
  71:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  72:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  73:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  74:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * force register cache usage
  75:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  see also d2_df_no_registercaching */
  76:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  77:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_USEREGCACHE 
  78:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  79:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  80:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * set initial size of list of dlist start address */
  81:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  82:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define DLIST_ADRESSES_NUMBER 16
  83:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  84:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  85:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
  86:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Register Cache */
  87:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  88:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_registermap.h"
  89:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  90:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef struct _d2_cacheddata
  91:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
  92:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32    data[  D2_QUANTITY ];
  93:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8     valid[ D2_QUANTITY ];
  94:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** } d2_cacheddata;
  95:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
  96:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef D2_USEREGCACHE
  97:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** D2_EXTERN const d2_u8 d2_cacheableregs[D2_QUANTITY];
  98:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
  99:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 100:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef void (*d2_fp_scratchfull)( void *handle );
 101:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 102:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*--------------------------------------------------------------------------- */
 103:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_base.h"
 104:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_dlist.h"
 105:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_rbuffer.h"
 106:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_hardware.h"
 107:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_context.h"
 108:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #include "dave_math.h"
 109:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 110:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 111:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * use higher precision of qlimiters */
 112:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 113:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define LIMITER_HIPRECISION 6 
 114:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 115:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 116:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 117:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * These helper macros are used to stringify a given macro */
 118:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_STR(s)           # s
 119:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_XSTR(s)          D2_STR(s)  /* PRQA S 3453 */ /* $Misra: #MISRA_BUG_MACRO_HASH $*/
 120:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 121:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 122:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 123:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Define the D2_VERSION and D2_VERSION_STRING macros */
 124:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 125:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /* Build up the D2_VERSION macro */
 126:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_VERSION ((D2_VERSION_BRANCH << 24) | (D2_VERSION_MAJOR << 16) | D2_VERSION_MINOR )
 127:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 128:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /* Create the D2_VERSION_STRING macro */
 129:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_VERSION_STRING  D2_VERSION_BRANCH_STRING " V" D2_XSTR(D2_VERSION_MAJOR) "." D2_XSTR(D2_V
 130:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 131:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 132:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Internal device structure */
 133:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 134:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef struct _d2_devicedata
 135:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 136:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    struct _d2_devicedata *next;        /* to chain devices [must be index 0] */
 137:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 138:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_dlist *readlist;                 /* read (executing) dlist */
 139:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_dlist *writelist;                /* write (under construction) dlist */
 140:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_rbuffer *selectedbuffer;         /* currently selected renderbuffer */
 141:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_rbuffer *renderbuffer[2];        /* default renderbuffers */
 142:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 143:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d1_device      *hwid;               /* lowlevel access handle */
 144:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *ctxchain;           /* context chain (list of all contexts for this device) */
 145:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *ctxdef;             /* default context (cannot be removed by application) */
 146:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *ctxselected;        /* selected context (used as target of context write/read op
 147:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *ctxsolid;           /* solid context (used as source for rendering solid geometr
 148:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *ctxoutline;         /* outline context (used as source for rendering outlines) *
 149:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef D2_USEBLITBACKUPCONTEXT
 150:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *blitcontext;        /* internal context used only for blits */
 151:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #else
 152:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata_backup *blitcontext_b; /* internal context backup used only for blits */
 153:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
 154:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_contextdata *srccontext;         /* last context that acted as source for display list (for d
 155:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_color       *srcclut;            /* last clut that was loaded  */
 156:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 157:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    void *   framebuffer;               /* rendering baseaddress */
 158:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32   pitch, bpp;                /* framebuffer pitch and bytes per pixel */
 159:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32   fbformat;                  /* framebuffer format */
 160:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   fbwidth,fbheight;          /* framebuffer size */
 161:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   fbstylemask;               /* dave ctrl1 bitmask for framebuffer format */
 162:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   cr2;                       /* control register 2 */
 163:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 164:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   cachectlmask;              /* dave cache ctrl register bitmask */
 165:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   perftriggermask;           /* dave performance counter trigger source register bitmask 
 166:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 167:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   rendermode;                /* see 'enum d2_rendermodes' */
 168:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32   flags;                     /* see 'enum d2_deviceflags' */
 169:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_width outlinewidth;
 170:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_point soffx, soffy;
 171:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_point clipxmin, clipymin;
 172:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_point clipxmax, clipymax;
 173:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 174:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_lowlocalmem_mode *lowlocalmem_mode;       /* only used in 'low localmem' mode */
 175:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 176:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32 hwrevision;
 177:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32 hwmemarchitecture;
 178:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 179:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_u32 dlistblocksize;              /* specify number of entries to grow when dlist is full */
 180:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #ifdef D2_USEREGCACHE
 181:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_cacheddata cache;                 /* register cache for this device */
 182:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #endif
 183:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    /* display list assembly buffer */
 184:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_dlist_scratch_entry *dlscratch_base;
 185:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_dlist_scratch_entry *dlscratch_pos;
 186:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32                  dlscratch_cnt;
 187:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_fp_scratchfull       dlscratch_hook;
 188:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 189:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   lasttextwasrle;               /* last texture format was RLE */
 190:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   maxpatlen;                    /* maximum size of pattern bitvector supported by the hard
 191:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   errorcode;                    /* last actions detaild result code */
 192:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   delayed_errorcode;            /* errorcondition that exists until the renderbuffer gets 
 193:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   hilimiterprecision_supported; /* is set to 1 when the hilimiterprecision feature is supp
 194:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 195:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s8   dlist_indirect_supported;     /* is set to 1 when lists of dlist addresses are supported
 196:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32* dlist_list_single[2];         /* for d2_executedlist we need an extra dlist list with ju
 197:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 198:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** } d2_devicedata;
 199:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 200:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*--------------------------------------------------------------------------- */
 201:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 202:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef struct _d2_bbox
 203:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 204:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_point xmin, ymin;
 205:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_point xmax, ymax;
 206:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** } d2_bbox;
 207:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 208:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef struct _d2_limdata
 209:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 210:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32 start;
 211:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32 xadd;
 212:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    d2_s32 yadd;
 213:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** } d2_limdata;
 214:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 215:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 216:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Internal flags */
 217:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 218:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** typedef d2_u32 d2_lineendflags_intern;
 219:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 220:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_base                256u
 221:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 222:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_ext_first_edge     (d2_lei_base *  2)
 223:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_ext_last_edge      (d2_lei_base *  4)
 224:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_buffer_first_edge  (d2_lei_base *  8)
 225:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_buffer_last_edge   (d2_lei_base * 16)
 226:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_miter_edge         (d2_lei_base * 32)
 227:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_miter1_flip        (d2_lei_base * 64)
 228:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define d2_lei_miter2_flip        (d2_lei_base *128)
 229:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 230:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** /*---------------------------------------------------------------------------
 231:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****  * Internal macros */
 232:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 233:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_DEV(d)           ((d2_devicedata *) (d))           /* PRQA S 3453 */ /* $Misra: #MACRO_T
 234:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_CTX(c)           ((d2_contextdata *) (c))          /* PRQA S 3453 */ /* $Misra: #MACRO_T
 235:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_FNC(r)           ((d2_renderfunctions *) (r))      /* PRQA S 3453 */ /* $Misra: #MACRO_T
 236:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** #define D2_DRB(r)           ((d2_rbuffer *) (r))              /* PRQA S 3453 */ /* $Misra: #MACRO_T
 237:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 238:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** static D2_INLINE d2_s32 d2_seterr(d2_device *handle, d2_s32 err); /* to satisfy MISRA rule 3450 */
 239:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** static D2_INLINE d2_s32 d2_seterr(d2_device *handle, d2_s32 err) /* PRQA S 3219, 3480 */ /* $Misra:
 104                             		.loc 2 239 25 view .LVU42
 105                             	.LBB11:
 240:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    D2_DEV(handle)->errorcode = (d2_s8)(err);
 106                             		.loc 2 241 4 view .LVU43
 107                             		.loc 2 241 30 is_stmt 0 view .LVU44
 108 0063 FA 14 C6 01 09          		mov.B	#9, 454[r1]
 242:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 243:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h ****    return err;
 109                             		.loc 2 243 4 is_stmt 1 view .LVU45
 110                             	.LVL6:
 111                             		.loc 2 243 4 is_stmt 0 view .LVU46
 112                             	.LBE11:
 113                             	.LBE10:
 143:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 114                             		.loc 1 143 7 view .LVU47
 115 0068 66 91                   		mov.L	#9, r1
 116                             	.LVL7:
 143:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 117                             		.loc 1 143 7 view .LVU48
 118 006a 2E F6                   		bra	.L1
 119                             	.LVL8:
 120                             	.L8:
 148:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 121                             		.loc 1 148 7 is_stmt 1 view .LVU49
 122                             	.LBB12:
 123                             	.LBI12:
 239:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 124                             		.loc 2 239 25 view .LVU50
 125                             	.LBB13:
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 126                             		.loc 2 241 4 view .LVU51
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 127                             		.loc 2 241 30 is_stmt 0 view .LVU52
 128 006c FA 14 C6 01 09          		mov.B	#9, 454[r1]
 129                             		.loc 2 243 4 is_stmt 1 view .LVU53
 130                             	.LVL9:
 131                             		.loc 2 243 4 is_stmt 0 view .LVU54
 132                             	.LBE13:
 133                             	.LBE12:
 148:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 134                             		.loc 1 148 7 view .LVU55
 135 0071 66 91                   		mov.L	#9, r1
 136                             	.LVL10:
 148:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 137                             		.loc 1 148 7 view .LVU56
 138 0073 2E ED                   		bra	.L1
 139                             	.LVL11:
 140                             	.L9:
 156:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 141                             		.loc 1 156 7 is_stmt 1 view .LVU57
 142                             	.LBB14:
 143                             	.LBI14:
 239:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 144                             		.loc 2 239 25 view .LVU58
 145                             	.LBB15:
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 146                             		.loc 2 241 4 view .LVU59
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 147                             		.loc 2 241 30 is_stmt 0 view .LVU60
 148 0075 FA 14 C6 01 09          		mov.B	#9, 454[r1]
 149                             		.loc 2 243 4 is_stmt 1 view .LVU61
 150                             	.LVL12:
 151                             		.loc 2 243 4 is_stmt 0 view .LVU62
 152                             	.LBE15:
 153                             	.LBE14:
 156:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 154                             		.loc 1 156 7 view .LVU63
 155 007a 66 91                   		mov.L	#9, r1
 156                             	.LVL13:
 156:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 157                             		.loc 1 156 7 view .LVU64
 158 007c 2E E4                   		bra	.L1
 159                             	.LFE6:
 161 007e EF 00                   		.section	.text.d2_blitcopy,"ax",@progbits
 162                             		.global	_d2_blitcopy
 164                             	_d2_blitcopy:
 165                             	.LVL14:
 166                             	.LFB7:
 170:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 171:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
 172:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Group: BLIT Rendering Functions */
 173:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 174:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** /*--------------------------------------------------------------------------
 175:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * function: d2_blitcopy
 176:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Copy rectangle part of the source into destination.
 177:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 178:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * The source is set prior to the blit using <d2_setblitsrc> and the destination
 179:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * will be part of the framebuffer (see: <d2_framebuffer>) just as with any normal
 180:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * rendering function.
 181:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 182:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * parameters:
 183:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   handle - device pointer (see: <d2_opendevice>)
 184:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   srcwidth, srcheight - size of source rectangle in pixels (integer)
 185:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   srcx,srcy  - position in source bitmap (integer)
 186:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   dstwidth, dstheight - size of destination rectangle in pixels (fixedpoint)
 187:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   dstx,dsty - position in destination bitmap (fixedpoint)
 188:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   flags - any combination of blit flag bits (see below)
 189:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 190:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * blit flag bits:
 191:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 192:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_filteru  - apply linear filter on U axis (x-direction)
 193:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_filterv  - apply linear filter in V axis (y-direction)
 194:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_filter - apply bilinear filter (both axis)
 195:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_wrapu - wrap bitmap on U axis (x-direction)
 196:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_wrapv - wrap bitmap on V axis (y-direction)
 197:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_wrap - wrap bitmap on U and V axis (x/y-direction)
 198:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_mirroru - mirror bitmap in U axis (x-direction)
 199:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_mirrorv - mirror bitmap in V axis (y-direction)
 200:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_colorize - bitmap colors are multiplied by color register index 0 (see: <d2_setcolor>)
 201:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_colorize2 - bitmap colors are interpolated between color register index 0 and 1 (see: <d
 202:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_usealpha - alpha value from bitmap is used
 203:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_invertalpha - alpha value from bitmap is inverted before use (requires usealpha)
 204:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   d2_bf_no_blitctxbackup   - for this blit don't backup context data for better performance; pre
 205:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 206:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 207:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * (start code)
 208:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 209:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *     blitsrc.src:+-------------------------------------+ 
 210:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           blitsrc.width             | 
 211:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |<----------blitsrc.pitch------------>| 
 212:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |                                     | 
 213:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |    srcx/y:+-----------------+  ^   
 214:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           |                 |  |   
 215:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           |<---srcwidth---->|  |   
 216:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           |                 |  | srcheight  
 217:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           |                 |  |   
 218:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |           +-------\\--------+  v  
 219:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                 |                    \\ 
 220:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                                       \\ 
 221:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *         Display:  +--------------------\\----------------------+ 
 222:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                     \\                     | 
 223:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |         dstx/y:+-----\\-------------+  ^   
 224:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                |                    |  |   
 225:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                |<------dstwidth---->|  |   
 226:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                |                    |  | dstheight  
 227:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                |                    |  |   
 228:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                |                    |  |   
 229:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *                   |                +--------------------+  v   
 230:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 231:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * (end)
 232:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 233:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * <d2_setblitsrc> sets parameters for the texture buffer. 
 234:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * <d2_blitcopy> sets parameters for an area of the texture buffer and 
 235:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * an area of the framebuffer where the texture area will be mapped to.
 236:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Both areas don't need to be the same size.
 237:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 238:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * note:
 239:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * Wrapping will work with source bitmap dimensions that are integer powers of two only (2,4,8,16,3
 240:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * texture pitch can be >= 2048 if (srcheight-1) * pitch < 2048*1024 and if srcheight is multiple o
 242:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *
 243:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * d2_bf_filterv cannot be used if the pitch of the texture is >= 2048
 244:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * 
 245:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * returns:
 246:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  *   errorcode (D2_OK if successfull) see list of <Errorcodes> for details
 247:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****  * */
 248:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** d2_s32 d2_blitcopy( d2_device *handle, d2_s32 srcwidth, d2_s32 srcheight, d2_blitpos srcx, d2_blitp
 249:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** {
 167                             		.loc 1 249 1 is_stmt 1 view -0
 168                             		.loc 1 249 1 is_stmt 0 view .LVU66
 169 0000 6E 6D                   		pushm	r6-r13
 170                             	.LCFI2:
 171                             		.loc 1 249 1 view .LVU67
 172 0002 71 00 C0                		add	#-64, r0
 173                             	.LCFI3:
 174 0005 75 47 64                		mov.L	#0x64, r7
 175 0008 4B 07                   		add	r0, r7
 176 000a EF 1B                   		mov.L	r1, r11
 177 000c EF 28                   		mov.L	r2, r8
 178 000e EF 39                   		mov.L	r3, r9
 179 0010 92 84                   		mov.W	r4, 20[r0]
 180 0012 DC 74                   		mov.W	[r7], r4
 181                             	.LVL15:
 182                             		.loc 1 249 1 view .LVU68
 183 0014 D5 70 01 0C             		mov.W	2[r7], 24[r0]
 184 0018 D5 70 02 0D             		mov.W	4[r7], 26[r0]
 185 001c D5 70 03 10             		mov.W	6[r7], 32[r0]
 186 0020 D5 70 04 11             		mov.W	8[r7], 34[r0]
 187 0024 A8 FE                   		mov.L	12[r7], r6
 250:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_s32 sw, sh;
 188                             		.loc 1 250 4 is_stmt 1 view .LVU69
 251:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_s32 dxu, dyv, u0, v0;
 189                             		.loc 1 251 4 view .LVU70
 252:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_s32 texWidth, texHeight;
 190                             		.loc 1 252 4 view .LVU71
 253:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_contextdata *ctx;
 191                             		.loc 1 253 4 view .LVU72
 254:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_color texmodecl1, texmodecl2;
 192                             		.loc 1 254 4 view .LVU73
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    void *src = 0;
 193                             		.loc 1 255 4 view .LVU74
 194                             	.LVL16:
 256:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 195                             		.loc 1 256 4 view .LVU75
 257:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 isRLE = 0;
 196                             		.loc 1 257 4 view .LVU76
 258:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_contextdata *blitcontext;
 197                             		.loc 1 258 4 view .LVU77
 259:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #ifdef D2_USEBLITBACKUPCONTEXT
 260:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_contextdata *backup_context;
 261:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_s32 i;
 262:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #else
 263:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* backup data for context content used by blit */
 264:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_contextdata_backup *backup_context = D2_DEV(handle)->blitcontext_b;
 198                             		.loc 1 264 4 view .LVU78
 199                             		.loc 1 264 27 is_stmt 0 view .LVU79
 200 0026 ED 1A 0C                		mov.L	48[r1], r10
 201                             	.LVL17:
 265:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* if d2_bf_no_blitctxbackup minimal backup on stack */
 266:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 fillmode_b = 0;
 202                             		.loc 1 266 4 is_stmt 1 view .LVU80
 267:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #endif
 268:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 269:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* current active context (reading) */
 270:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    ctx = D2_DEV(handle)->ctxselected;
 203                             		.loc 1 270 4 view .LVU81
 204                             		.loc 1 270 8 is_stmt 0 view .LVU82
 205 0029 AA 1F                   		mov.L	36[r1], r7
 206                             	.LVL18:
 271:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 272:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    isRLE = (ctx->blit_format & d2_mode_rle);
 207                             		.loc 1 272 4 is_stmt 1 view .LVU83
 208                             		.loc 1 272 16 is_stmt 0 view .LVU84
 209 002b ED 7C 5E                		mov.L	376[r7], r12
 210                             		.loc 1 272 10 view .LVU85
 211 002e 75 2C 10                		and #16, r12
 212                             	.LVL19:
 273:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 274:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( srcwidth>0, D2_INVALIDWIDTH );                                                   /*
 213                             		.loc 1 274 4 is_stmt 1 view .LVU86
 275:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( ((d2_u32)dstwidth>0) && ((d2_u32)dstwidth<=D2_FIX4(1024*2)), D2_INVALIDWIDTH );  /*
 214                             		.loc 1 275 4 view .LVU87
 276:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( srcheight>0, D2_INVALIDHEIGHT );                                                 /*
 215                             		.loc 1 276 4 view .LVU88
 277:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( (dstheight>0) && (dstheight<=D2_FIX4(1024)), D2_INVALIDHEIGHT );                 /*
 216                             		.loc 1 277 4 view .LVU89
 278:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATEP( handle, D2_INVALIDDEVICE );                                                     /*
 217                             		.loc 1 278 4 view .LVU90
 279:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATEP( ctx->blit_src, D2_NULLPOINTER );                                                /*
 218                             		.loc 1 279 4 view .LVU91
 280:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 281:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* no v filtering if pitch too large (11bit) */
 282:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(ctx->blit_pitch >= (1024 * 2))
 219                             		.loc 1 282 4 view .LVU92
 220                             		.loc 1 282 10 is_stmt 0 view .LVU93
 221 0031 ED 75 5B                		mov.L	364[r7], r5
 222                             		.loc 1 282 6 view .LVU94
 223 0034 76 05 FF 07             		cmp	#0x7ff, r5
 224 0038 2B 04                   		ble	.L11
 283:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 284:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       flags &= ~ d2_tm_filterv;
 225                             		.loc 1 284 7 is_stmt 1 view .LVU95
 226                             		.loc 1 284 13 is_stmt 0 view .LVU96
 227 003a 7A 36                   		bclr	#3, r6
 228                             	.LVL20:
 229                             	.L11:
 285:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 286:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 287:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* check if pitch > 11bits */
 288:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* pitch goes to fractional part of v limiter -> will not be used if srcheight is multiple of ds
 289:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( (ctx->blit_pitch < (1024*2)) || ((ctx->blit_pitch >= (1024*2)) && (D2_FIX4(srcheigh
 230                             		.loc 1 289 4 is_stmt 1 view .LVU97
 290:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 291:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* check max value for ymask (21bit) */
 292:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( ((srcheight - 1) * ctx->blit_pitch) < (2048 * 1024), D2_INVALIDHEIGHT); /* PRQA S 4
 231                             		.loc 1 292 4 view .LVU98
 293:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 294:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 295:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* check: wrapping will work with texture dimensions that are integer powers of two only */
 296:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( !( (0 != (d2_tm_wrapu & flags)) && (0 != ( (d2_u32)ctx->blit_width  & ((d2_u32)ctx-
 232                             		.loc 1 296 4 view .LVU99
 297:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( !( (0 != (d2_tm_wrapv & flags)) && (0 != ( (d2_u32)ctx->blit_height & ((d2_u32)ctx-
 233                             		.loc 1 297 4 view .LVU100
 298:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 299:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* compute real texture width and height */
 300:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    texWidth  = srcwidth;
 234                             		.loc 1 300 4 view .LVU101
 301:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    texHeight = srcheight;
 235                             		.loc 1 301 4 view .LVU102
 302:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 303:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if( (texWidth + srcx)  > ctx->blit_width  ) 
 236                             		.loc 1 303 4 view .LVU103
 237                             		.loc 1 303 18 is_stmt 0 view .LVU104
 238 003c BA 83                   		movu.W	20[r0], r3
 239                             	.LVL21:
 240                             		.loc 1 303 18 view .LVU105
 241 003e A1 8B                   		mov.L	r3, 28[r0]
 242 0040 4B 83                   		add	r8, r3
 243                             		.loc 1 303 32 view .LVU106
 244 0042 ED 75 5C                		mov.L	368[r7], r5
 245                             		.loc 1 303 6 view .LVU107
 246 0045 47 53                   		cmp	r5, r3
 247 0047 2B 09                   		ble	.L42
 304:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 305:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       texWidth  = (ctx->blit_width - srcx);
 248                             		.loc 1 305 7 is_stmt 1 view .LVU108
 249                             		.loc 1 305 17 is_stmt 0 view .LVU109
 250 0049 A9 8B                   		mov.L	28[r0], r3
 251 004b 43 35                   		sub	r3, r5
 252 004d A2 85                   		mov.L	r5, 40[r0]
 253                             	.LVL22:
 254                             		.loc 1 305 17 view .LVU110
 255 004f 0C                      		bra	.L12
 256                             	.LVL23:
 257                             	.L42:
 300:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    texHeight = srcheight;
 258                             		.loc 1 300 14 view .LVU111
 259 0050 E7 08 0A                		mov.L	r8, 40[r0]
 260                             	.LVL24:
 261                             	.L12:
 306:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 307:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 308:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if( (texHeight + srcy) > ctx->blit_height )
 262                             		.loc 1 308 4 is_stmt 1 view .LVU112
 263                             		.loc 1 308 19 is_stmt 0 view .LVU113
 264 0053 5F 4D                   		movu.W	r4, r13
 265 0055 FF 24 9D                		add	r9, r13, r4
 266                             		.loc 1 308 32 view .LVU114
 267 0058 ED 75 5D                		mov.L	372[r7], r5
 268                             		.loc 1 308 6 view .LVU115
 269 005b 47 54                   		cmp	r5, r4
 270 005d 2B 07                   		ble	.L43
 309:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 310:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       texHeight = (ctx->blit_height - srcy);
 271                             		.loc 1 310 7 is_stmt 1 view .LVU116
 272                             		.loc 1 310 17 is_stmt 0 view .LVU117
 273 005f 43 D5                   		sub	r13, r5
 274 0061 A2 8D                   		mov.L	r5, 44[r0]
 275                             	.LVL25:
 276                             		.loc 1 310 17 view .LVU118
 277 0063 0C                      		bra	.L13
 278                             	.LVL26:
 279                             	.L43:
 301:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 280                             		.loc 1 301 14 view .LVU119
 281 0064 E7 09 0B                		mov.L	r9, 44[r0]
 282                             	.LVL27:
 283                             	.L13:
 311:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 312:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 313:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* check: wrapping will only work with rectangle dimensions that are integer powers of two only 
 314:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( !( (0 != (d2_tm_wrapu & flags)) && (0 != ((d2_u32)texWidth  & ((d2_u32)texWidth  - 
 284                             		.loc 1 314 4 is_stmt 1 view .LVU120
 315:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_VALIDATE( !( (0 != (d2_tm_wrapv & flags)) && (0 != ((d2_u32)texHeight & ((d2_u32)texHeight - 
 285                             		.loc 1 315 4 view .LVU121
 316:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 317:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #ifdef D2_USEBLITBACKUPCONTEXT
 318:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* switch to blit context [hard switch] */
 319:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext = D2_DEV(handle)->blitcontext;
 320:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    backup_context = D2_DEV(handle)->ctxselected;
 321:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_DEV(handle)->ctxselected = blitcontext;
 322:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 323:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* setup blit context */
 324:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->features       = ctx->features;
 325:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->blurring       = ctx->blurring;
 326:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->alphamode      = ctx->alphamode;
 327:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->constalpha     = ctx->constalpha;
 328:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->basealpha[0]   = ctx->basealpha[0];
 329:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->basealpha[1]   = ctx->basealpha[1];
 330:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->alphablendmask = ctx->alphablendmask;
 331:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->blendmask      = ctx->blendmask;
 332:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->tbstylemask    = ctx->tbstylemask;
 333:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->rlemask        = ctx->rlemask;
 334:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->clutmask       = ctx->clutmask;
 335:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->colkeymask     = ctx->colkeymask;
 336:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->cr2mask        = ctx->cr2mask;
 337:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->invblur        = ctx->invblur;
 338:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->internaldirty  = 0;
 339:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texclut        = ctx->texclut;
 340:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texclut_cached = ctx->texclut_cached;
 341:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texclutupload  = ctx->texclutupload;
 342:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texclutoffset  = ctx->texclutoffset;
 343:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->colorkey       = ctx->colorkey;
 344:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 345:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* copy gradient data if necessary */
 346:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->gradients = ctx->gradients;
 347:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != blitcontext->gradients)
 348:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 349:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       for(i=0; i<4; i++)
 350:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 351:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          blitcontext->gradient[i] = ctx->gradient[i];
 352:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 353:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 354:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #else
 355:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext = D2_DEV(handle)->ctxselected;
 286                             		.loc 1 355 4 view .LVU122
 356:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 357:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* backup to stack */
 358:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(backup_context && (0 == (d2_bf_no_blitctxbackup & flags)))
 287                             		.loc 1 358 4 view .LVU123
 288                             		.loc 1 358 6 is_stmt 0 view .LVU124
 289 0067 61 0A                   		cmp	#0, r10
 290 0069 3A 82 00                		beq	.L14
 291                             		.loc 1 358 55 discriminator 1 view .LVU125
 292 006c FB 5A 00 01             		mov.L	#0x100, r5
 293 0070 53 65                   		and	r6, r5
 294 0072 A2 0D                   		mov.L	r5, 36[r0]
 295                             		.loc 1 358 22 discriminator 1 view .LVU126
 296 0074 21 77                   		bne	.L14
 359:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 360:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->fillmode          = ctx->fillmode;       
 297                             		.loc 1 360 7 is_stmt 1 view .LVU127
 298                             		.loc 1 360 41 is_stmt 0 view .LVU128
 299 0076 C1 7A 17                		mov.B	23[r7], [r10]
 361:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->internaldirty     = ctx->internaldirty;
 300                             		.loc 1 361 7 is_stmt 1 view .LVU129
 301                             		.loc 1 361 41 is_stmt 0 view .LVU130
 302 0079 C6 7A 0E 01 02          		mov.B	270[r7], 2[r10]
 362:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->features          = ctx->features;
 303                             		.loc 1 362 7 is_stmt 1 view .LVU131
 304                             		.loc 1 362 41 is_stmt 0 view .LVU132
 305 007e C5 7A D5 01             		mov.B	213[r7], 1[r10]
 363:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texcenterx        = ctx->texcenterx;
 306                             		.loc 1 363 7 is_stmt 1 view .LVU133
 307                             		.loc 1 363 41 is_stmt 0 view .LVU134
 308 0082 E5 7A 3F 01             		mov.L	252[r7], 4[r10]
 364:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texcentery        = ctx->texcentery;
 309                             		.loc 1 364 7 is_stmt 1 view .LVU135
 310                             		.loc 1 364 41 is_stmt 0 view .LVU136
 311 0086 E5 7A 40 02             		mov.L	256[r7], 8[r10]
 365:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->tbstylemask       = ctx->tbstylemask;
 312                             		.loc 1 365 7 is_stmt 1 view .LVU137
 313                             		.loc 1 365 41 is_stmt 0 view .LVU138
 314 008a E5 7A 4B 03             		mov.L	300[r7], 12[r10]
 366:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texbpp            = ctx->texbpp;
 315                             		.loc 1 366 7 is_stmt 1 view .LVU139
 316                             		.loc 1 366 41 is_stmt 0 view .LVU140
 317 008e C5 7A E9 29             		mov.B	233[r7], 41[r10]
 367:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texwrapmask       = ctx->texwrapmask;
 318                             		.loc 1 367 7 is_stmt 1 view .LVU141
 319                             		.loc 1 367 41 is_stmt 0 view .LVU142
 320 0092 E5 7A 4E 04             		mov.L	312[r7], 16[r10]
 368:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texmodemask       = ctx->texmodemask;
 321                             		.loc 1 368 7 is_stmt 1 view .LVU143
 322                             		.loc 1 368 41 is_stmt 0 view .LVU144
 323 0096 E5 7A 4D 05             		mov.L	308[r7], 20[r10]
 369:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texmode           = ctx->texmode;
 324                             		.loc 1 369 7 is_stmt 1 view .LVU145
 325                             		.loc 1 369 41 is_stmt 0 view .LVU146
 326 009a C5 7A E8 28             		mov.B	232[r7], 40[r10]
 370:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texpitch          = ctx->texpitch;
 327                             		.loc 1 370 7 is_stmt 1 view .LVU147
 328                             		.loc 1 370 41 is_stmt 0 view .LVU148
 329 009e E5 7A 3B 06             		mov.L	236[r7], 24[r10]
 371:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texwidth          = ctx->texwidth;
 330                             		.loc 1 371 7 is_stmt 1 view .LVU149
 331                             		.loc 1 371 41 is_stmt 0 view .LVU150
 332 00a2 E5 7A 3C 07             		mov.L	240[r7], 28[r10]
 372:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texheight         = ctx->texheight;
 333                             		.loc 1 372 7 is_stmt 1 view .LVU151
 334                             		.loc 1 372 41 is_stmt 0 view .LVU152
 335 00a6 E5 7A 3D 08             		mov.L	244[r7], 32[r10]
 373:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texbase           = ctx->texbase;
 336                             		.loc 1 373 7 is_stmt 1 view .LVU153
 337                             		.loc 1 373 41 is_stmt 0 view .LVU154
 338 00aa E5 7A 3E 09             		mov.L	248[r7], 36[r10]
 374:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texsubppb         = ctx->texsubppb;
 339                             		.loc 1 374 7 is_stmt 1 view .LVU155
 340                             		.loc 1 374 41 is_stmt 0 view .LVU156
 341 00ae C5 7A EA 2A             		mov.B	234[r7], 42[r10]
 375:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->rlebpp            = ctx->rlebpp;
 342                             		.loc 1 375 7 is_stmt 1 view .LVU157
 343                             		.loc 1 375 41 is_stmt 0 view .LVU158
 344 00b2 C5 7A EB 2B             		mov.B	235[r7], 43[r10]
 376:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->rlemask           = ctx->rlemask;
 345                             		.loc 1 376 7 is_stmt 1 view .LVU159
 346                             		.loc 1 376 41 is_stmt 0 view .LVU160
 347 00b6 E5 7A 4F 0B             		mov.L	316[r7], 44[r10]
 377:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->clutmask          = ctx->clutmask;
 348                             		.loc 1 377 7 is_stmt 1 view .LVU161
 349                             		.loc 1 377 41 is_stmt 0 view .LVU162
 350 00ba E5 7A 50 0C             		mov.L	320[r7], 48[r10]
 378:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->cr2mask           = ctx->cr2mask;
 351                             		.loc 1 378 7 is_stmt 1 view .LVU163
 352                             		.loc 1 378 41 is_stmt 0 view .LVU164
 353 00be E5 7A 49 0D             		mov.L	292[r7], 52[r10]
 379:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texmodecl[0]      = ctx->texmodecl[0];
 354                             		.loc 1 379 7 is_stmt 1 view .LVU165
 355                             		.loc 1 379 41 is_stmt 0 view .LVU166
 356 00c2 E5 7A 56 0E             		mov.L	344[r7], 56[r10]
 380:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texmodecl[1]      = ctx->texmodecl[1];
 357                             		.loc 1 380 7 is_stmt 1 view .LVU167
 358                             		.loc 1 380 41 is_stmt 0 view .LVU168
 359 00c6 E5 7A 57 0F             		mov.L	348[r7], 60[r10]
 381:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].x1      = ctx->texlim[0].x1; 
 360                             		.loc 1 381 7 is_stmt 1 view .LVU169
 361                             		.loc 1 381 41 is_stmt 0 view .LVU170
 362 00ca D5 7A 54 2A             		mov.W	168[r7], 84[r10]
 382:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].y1      = ctx->texlim[0].y1;
 363                             		.loc 1 382 7 is_stmt 1 view .LVU171
 364                             		.loc 1 382 41 is_stmt 0 view .LVU172
 365 00ce D5 7A 55 2B             		mov.W	170[r7], 86[r10]
 383:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].xadd2   = ctx->texlim[0].xadd2;
 366                             		.loc 1 383 7 is_stmt 1 view .LVU173
 367                             		.loc 1 383 41 is_stmt 0 view .LVU174
 368 00d2 E5 7A 28 13             		mov.L	160[r7], 76[r10]
 384:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].yadd2   = ctx->texlim[0].yadd2;
 369                             		.loc 1 384 7 is_stmt 1 view .LVU175
 370                             		.loc 1 384 41 is_stmt 0 view .LVU176
 371 00d6 E5 7A 29 14             		mov.L	164[r7], 80[r10]
 385:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].xadd    = ctx->texlim[0].xadd;
 372                             		.loc 1 385 7 is_stmt 1 view .LVU177
 373                             		.loc 1 385 41 is_stmt 0 view .LVU178
 374 00da E5 7A 26 11             		mov.L	152[r7], 68[r10]
 386:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[0].yadd    = ctx->texlim[0].yadd;
 375                             		.loc 1 386 7 is_stmt 1 view .LVU179
 376                             		.loc 1 386 41 is_stmt 0 view .LVU180
 377 00de E5 7A 27 12             		mov.L	156[r7], 72[r10]
 387:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[1].xadd    = ctx->texlim[1].xadd;
 378                             		.loc 1 387 7 is_stmt 1 view .LVU181
 379                             		.loc 1 387 41 is_stmt 0 view .LVU182
 380 00e2 E5 7A 2C 17             		mov.L	176[r7], 92[r10]
 388:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       backup_context->texlim[1].yadd    = ctx->texlim[1].yadd;
 381                             		.loc 1 388 7 is_stmt 1 view .LVU183
 382                             		.loc 1 388 41 is_stmt 0 view .LVU184
 383 00e6 E5 7A 2D 18             		mov.L	180[r7], 96[r10]
 384 00ea 0D                      		bra	.L15
 385                             	.L14:
 389:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 390:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 391:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 392:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       fillmode_b = ctx->fillmode; 
 386                             		.loc 1 392 7 is_stmt 1 view .LVU185
 387                             		.loc 1 392 18 is_stmt 0 view .LVU186
 388 00eb B5 FB                   		movu.B	23[r7], r3
 389 00ed A2 0B                   		mov.L	r3, 36[r0]
 390                             	.LVL28:
 391                             	.L15:
 393:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 394:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #endif
 395:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 396:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    (void)d2_setfillmode( handle, d2_fm_texture );
 392                             		.loc 1 396 4 is_stmt 1 view .LVU187
 393                             		.loc 1 396 10 is_stmt 0 view .LVU188
 394 00ef 66 32                   		mov.L	#3, r2
 395                             	.LVL29:
 396                             		.loc 1 396 10 view .LVU189
 397 00f1 EF B1                   		mov.L	r11, r1
 398                             	.LVL30:
 399                             		.loc 1 396 10 view .LVU190
 400 00f3 05 00 00 00             		bsr	_d2_setfillmode
 401                             	.LVL31:
 397:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    (void)d2_settexelcenter ( handle, 0, 0 );
 402                             		.loc 1 397 4 is_stmt 1 view .LVU191
 403                             		.loc 1 397 10 is_stmt 0 view .LVU192
 404 00f7 66 03                   		mov	#0, r3
 405 00f9 66 02                   		mov	#0, r2
 406 00fb EF B1                   		mov.L	r11, r1
 407 00fd 05 00 00 00             		bsr	_d2_settexelcenter
 408                             	.LVL32:
 398:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 399:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* find texture origin */
 400:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != isRLE)
 409                             		.loc 1 400 4 is_stmt 1 view .LVU193
 410                             		.loc 1 400 6 is_stmt 0 view .LVU194
 411 0101 61 0C                   		cmp	#0, r12
 412 0103 20 44                   		beq	.L16
 401:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 402:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       src = ctx->blit_src; /* rle textures can only be decoded from start */
 413                             		.loc 1 402 7 is_stmt 1 view .LVU195
 414                             		.loc 1 402 11 is_stmt 0 view .LVU196
 415 0105 E5 70 5A 05             		mov.L	360[r7], 20[r0]
 416                             	.LVL33:
 417                             		.balign 8,3,1
 418                             	.L17:
 403:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****     
 404:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       /* offset will be done using u0, v0 (see below) */
 405:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 406:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 407:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 408:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       format_noflags = ctx->blit_format & ~d2_mode_rle & ~d2_mode_clut;
 409:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       switch (format_noflags)
 410:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 411:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_ai44 :
 412:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             if(0 == ((D2_DEV(handle)->hwrevision) & D2FB_TEXCLUT))
 413:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             {
 414:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****                D2_RETERR( handle, D2_ILLEGALMODE );
 415:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             }
 416:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             blitcontext->tbstylemask = D2C_READFORMAT1 | D2C_READFORMAT3;
 417:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             blitcontext->texbpp = 1;
 418:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             /* run into next case */
 419:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_alpha8 :
 420:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_alpha4 :
 421:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_alpha2 :
 422:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_alpha1 :
 423:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_i8 :
 424:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_i4 :
 425:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_i2 :
 426:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_i1 :
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             src = ((d2_s8 *)ctx->blit_src) + srcx + (srcy * ctx->blit_pitch);
 428:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 429:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 430:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgb565 :
 431:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgb444 :
 432:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgb555 :
 433:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_argb4444 :
 434:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_argb1555 :
 435:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgba4444 :
 436:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgba5551 :
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             src = ((d2_s16 *)ctx->blit_src) + srcx + (srcy * ctx->blit_pitch);
 438:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 439:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 440:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_argb8888 :
 441:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgba8888 :
 442:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          case d2_mode_rgb888 :
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             src = ((d2_s32 *)ctx->blit_src) + srcx + (srcy * ctx->blit_pitch);
 444:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 445:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 446:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          default:
 447:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 448:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 449:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 450:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 451:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 452:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* setup texture */
 453:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    (void)d2_settexturemode( handle, flags & (d2_bf_filter | d2_bf_wrap) );
 419                             		.loc 1 453 4 is_stmt 1 view .LVU197
 420                             		.loc 1 453 10 is_stmt 0 view .LVU198
 421 0109 66 F2                   		mov.L	#15, r2
 422 010b 53 62                   		and	r6, r2
 423 010d EF B1                   		mov.L	r11, r1
 424 010f 05 00 00 00             		bsr	_d2_settexturemode
 425                             	.LVL34:
 454:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != isRLE)
 426                             		.loc 1 454 4 is_stmt 1 view .LVU199
 427                             		.loc 1 454 6 is_stmt 0 view .LVU200
 428 0113 61 0C                   		cmp	#0, r12
 429 0115 3A CE 00                		beq	.L27
 455:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 456:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       (void)d2_settexture( handle, src, ctx->blit_pitch, ctx->blit_width, ctx->blit_height, ctx->bl
 430                             		.loc 1 456 7 is_stmt 1 view .LVU201
 431                             		.loc 1 456 13 is_stmt 0 view .LVU202
 432 0118 ED 74 5C                		mov.L	368[r7], r4
 433 011b ED 73 5B                		mov.L	364[r7], r3
 434 011e E5 70 5E 01             		mov.L	376[r7], 4[r0]
 435 0122 E1 70 5D                		mov.L	372[r7], [r0]
 436 0125 A9 0A                   		mov.L	20[r0], r2
 437 0127 EF B1                   		mov.L	r11, r1
 438 0129 05 00 00 00             		bsr	_d2_settexture
 439                             	.LVL35:
 440                             	.L28:
 457:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 458:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 459:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 460:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       (void)d2_settexture( handle, src, ctx->blit_pitch, texWidth, texHeight, ctx->blit_format );
 461:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 462:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 463:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* setup alpha channel operation */
 464:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_usealpha))
 441                             		.loc 1 464 4 is_stmt 1 view .LVU203
 442                             		.loc 1 464 6 is_stmt 0 view .LVU204
 443 012d FD 74 C6 20             		tst	#32, r6
 444 0131 3A C9 00                		beq	.L46
 465:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 466:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       if(0 != (flags & d2_bf_invertalpha))
 445                             		.loc 1 466 7 is_stmt 1 view .LVU205
 446                             		.loc 1 466 22 is_stmt 0 view .LVU206
 447 0134 75 44 80                		mov.L	#0x80, r4
 448 0137 53 64                   		and	r6, r4
 449                             		.loc 1 466 9 view .LVU207
 450 0139 3A 07 01                		beq	.L47
 467:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 468:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* invert alpha multiply */
 469:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl1 = 0xff000000u; /* multiply by ctx->constalpha happens in d2_calctexturealpha_in
 470:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 = 0x00000000u;
 451                             		.loc 1 470 21 view .LVU208
 452 013c 66 05                   		mov.L	#0, r5
 469:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 = 0x00000000u;
 453                             		.loc 1 469 21 view .LVU209
 454 013e FB 42 00 00 00 FF       		mov.L	#-16777216, r4
 455 0144 38 BE 00                		bra	.L29
 456                             	.LVL36:
 457                             	.L16:
 408:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       switch (format_noflags)
 458                             		.loc 1 408 7 is_stmt 1 view .LVU210
 408:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       switch (format_noflags)
 459                             		.loc 1 408 27 is_stmt 0 view .LVU211
 460 0147 ED 75 5E                		mov.L	376[r7], r5
 408:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       switch (format_noflags)
 461                             		.loc 1 408 22 view .LVU212
 462 014a 75 25 CF                		and #-49, r5
 463                             	.LVL37:
 409:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 464                             		.loc 1 409 7 is_stmt 1 view .LVU213
 465 014d 61 65                   		cmp	#6, r5
 466 014f 20 7A                   		beq	.L18
 467 0151 24 40                   		bgtu	.L19
 468 0153 61 25                   		cmp	#2, r5
 469 0155 20 74                   		beq	.L18
 470 0157 25 2C                   		bleu	.L52
 471 0159 61 45                   		cmp	#4, r5
 472 015b 25 3E                   		bleu	.L22
 412:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             {
 473                             		.loc 1 412 13 view .LVU214
 412:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             {
 474                             		.loc 1 412 37 is_stmt 0 view .LVU215
 475 015d ED B5 20                		mov.L	128[r11], r5
 476                             	.LVL38:
 412:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             {
 477                             		.loc 1 412 15 view .LVU216
 478 0160 FD 7C C5 00 00 20       		tst	#0x200000, r5
 479 0166 20 59                   		beq	.L53
 416:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             blitcontext->texbpp = 1;
 480                             		.loc 1 416 13 is_stmt 1 view .LVU217
 416:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             blitcontext->texbpp = 1;
 481                             		.loc 1 416 38 is_stmt 0 view .LVU218
 482 0168 F9 7E 4B 10 00 04       		mov.L	#0x40010, 300[r7]
 417:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             /* run into next case */
 483                             		.loc 1 417 13 is_stmt 1 view .LVU219
 417:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             /* run into next case */
 484                             		.loc 1 417 33 is_stmt 0 view .LVU220
 485 016e F9 74 E9 01             		mov.B	#1, 233[r7]
 486                             		.balign 8,3,2
 487                             	.L21:
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 488                             		.loc 1 427 13 is_stmt 1 view .LVU221
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 489                             		.loc 1 427 64 is_stmt 0 view .LVU222
 490 0172 ED 75 5B                		mov.L	364[r7], r5
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 491                             		.loc 1 427 59 view .LVU223
 492 0175 4F D5                   		mul	r13, r5
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 493                             		.loc 1 427 51 view .LVU224
 494 0177 BA 84                   		movu.W	20[r0], r4
 495 0179 4B 45                   		add	r4, r5
 427:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 496                             		.loc 1 427 17 view .LVU225
 497 017b 06 89 75 5A             		add	360[r7], r5
 498 017f A1 0D                   		mov.L	r5, 20[r0]
 499                             	.LVL39:
 428:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 500                             		.loc 1 428 13 is_stmt 1 view .LVU226
 501 0181 2E 88                   		bra	.L17
 502                             	.LVL40:
 503                             	.L52:
 409:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 504                             		.loc 1 409 7 is_stmt 0 view .LVU227
 505 0183 61 05                   		cmp	#0, r5
 506 0185 20 ED                   		beq	.L21
 507 0187 61 15                   		cmp	#1, r5
 508 0189 20 10                   		beq	.L22
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 509                             		.loc 1 255 10 view .LVU228
 510 018b 3E 05 00                		mov.L	#0, 20[r0]
 511                             	.LVL41:
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 512                             		.loc 1 255 10 view .LVU229
 513 018e 38 7B FF                		bra	.L17
 514                             	.LVL42:
 515                             	.L19:
 409:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 516                             		.loc 1 409 7 view .LVU230
 517 0191 61 F5                   		cmp	#15, r5
 518 0193 24 1A                   		bgtu	.L24
 519 0195 61 95                   		cmp	#9, r5
 520 0197 22 DB                   		bgeu	.L21
 521                             		.balign 8,3,2
 522                             	.L22:
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 523                             		.loc 1 437 13 is_stmt 1 view .LVU231
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 524                             		.loc 1 437 65 is_stmt 0 view .LVU232
 525 0199 ED 75 5B                		mov.L	364[r7], r5
 526                             	.LVL43:
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 527                             		.loc 1 437 60 view .LVU233
 528 019c 4F D5                   		mul	r13, r5
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 529                             		.loc 1 437 52 view .LVU234
 530 019e BA 84                   		movu.W	20[r0], r4
 531 01a0 4B 45                   		add	r4, r5
 532 01a2 4B 55                   		add	r5, r5
 437:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 533                             		.loc 1 437 17 view .LVU235
 534 01a4 06 89 75 5A             		add	360[r7], r5
 535 01a8 A1 0D                   		mov.L	r5, 20[r0]
 536                             	.LVL44:
 438:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 537                             		.loc 1 438 13 is_stmt 1 view .LVU236
 538 01aa 38 5F FF                		bra	.L17
 539                             	.LVL45:
 540                             	.L24:
 409:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 541                             		.loc 1 409 7 is_stmt 0 view .LVU237
 542 01ad 75 55 40                		cmp	#0x40, r5
 543 01b0 20 19                   		beq	.L18
 544 01b2 23 2B                   		bltu	.L44
 545 01b4 75 55 42                		cmp	#0x42, r5
 546 01b7 25 E2                   		bleu	.L22
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 547                             		.loc 1 255 10 view .LVU238
 548 01b9 3E 05 00                		mov.L	#0, 20[r0]
 549                             	.LVL46:
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 550                             		.loc 1 255 10 view .LVU239
 551 01bc 38 4D FF                		bra	.L17
 552                             	.LVL47:
 553                             	.L53:
 414:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             }
 554                             		.loc 1 414 16 is_stmt 1 view .LVU240
 555                             	.LBB16:
 556                             	.LBI16:
 239:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** {
 557                             		.loc 2 239 25 view .LVU241
 558                             	.LBB17:
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 559                             		.loc 2 241 4 view .LVU242
 241:../src/smc_gen/r_drw2d_rx/src/tes/dave_intern.h **** 
 560                             		.loc 2 241 30 is_stmt 0 view .LVU243
 561 01bf FA B4 C6 01 09          		mov.B	#9, 454[r11]
 562                             	.LVL48:
 563                             		.loc 2 243 4 is_stmt 1 view .LVU244
 564                             		.loc 2 243 4 is_stmt 0 view .LVU245
 565                             	.LBE17:
 566                             	.LBE16:
 414:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             }
 567                             		.loc 1 414 16 view .LVU246
 568 01c4 66 91                   		mov.L	#9, r1
 569 01c6 38 BF 01                		bra	.L10
 570                             	.LVL49:
 571                             	.L18:
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 572                             		.loc 1 443 13 is_stmt 1 view .LVU247
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 573                             		.loc 1 443 65 is_stmt 0 view .LVU248
 574 01c9 ED 75 5B                		mov.L	364[r7], r5
 575                             	.LVL50:
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 576                             		.loc 1 443 60 view .LVU249
 577 01cc 4F D5                   		mul	r13, r5
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 578                             		.loc 1 443 52 view .LVU250
 579 01ce BA 84                   		movu.W	20[r0], r4
 580 01d0 4B 45                   		add	r4, r5
 581 01d2 6C 25                   		shll	#2, r5
 443:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****             break;
 582                             		.loc 1 443 17 view .LVU251
 583 01d4 06 89 75 5A             		add	360[r7], r5
 584 01d8 A1 0D                   		mov.L	r5, 20[r0]
 585                             	.LVL51:
 444:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 586                             		.loc 1 444 13 is_stmt 1 view .LVU252
 587 01da 38 2F FF                		bra	.L17
 588                             	.LVL52:
 589                             	.L44:
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 590                             		.loc 1 255 10 is_stmt 0 view .LVU253
 591 01dd 3E 05 00                		mov.L	#0, 20[r0]
 592                             	.LVL53:
 255:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    d2_u32 format_noflags;
 593                             		.loc 1 255 10 view .LVU254
 594 01e0 38 29 FF                		bra	.L17
 595                             	.LVL54:
 596                             	.L27:
 460:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 597                             		.loc 1 460 7 is_stmt 1 view .LVU255
 460:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 598                             		.loc 1 460 13 is_stmt 0 view .LVU256
 599 01e3 ED 73 5B                		mov.L	364[r7], r3
 600 01e6 E5 70 5E 01             		mov.L	376[r7], 4[r0]
 601 01ea E1 00 0B                		mov.L	44[r0], [r0]
 602 01ed AA 84                   		mov.L	40[r0], r4
 603 01ef A9 0A                   		mov.L	20[r0], r2
 604 01f1 EF B1                   		mov.L	r11, r1
 605 01f3 05 00 00 00             		bsr	_d2_settexture
 606                             	.LVL55:
 607 01f7 38 36 FF                		bra	.L28
 608                             	.L46:
 471:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 472:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       else 
 473:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 474:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* alpha multiply */
 475:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl1 = 0x00000000u;
 476:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 = 0xff000000u; /* multiply by ctx->constalpha happens in d2_calctexturealpha_in
 477:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 478:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 479:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 480:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 481:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       /* alpha replace */
 482:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       texmodecl1 = 0xff000000u; /* multiply by ctx->constalpha happens in d2_calctexturealpha_inter
 483:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       texmodecl2 = 0xff000000u; /* multiply by ctx->constalpha happens in d2_calctexturealpha_inter
 609                             		.loc 1 483 18 view .LVU257
 610 01fa FB 52 00 00 00 FF       		mov.L	#-16777216, r5
 482:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       texmodecl2 = 0xff000000u; /* multiply by ctx->constalpha happens in d2_calctexturealpha_inter
 611                             		.loc 1 482 18 view .LVU258
 612 0200 EF 54                   		mov.L	r5, r4
 613                             	.L29:
 614                             	.LVL56:
 484:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 485:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 486:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* setup color channel operation */
 487:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_colorize))
 615                             		.loc 1 487 4 is_stmt 1 view .LVU259
 616                             		.loc 1 487 6 is_stmt 0 view .LVU260
 617 0202 FD 74 C6 10             		tst	#16, r6
 618 0206 20 48                   		beq	.L30
 488:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 489:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       if(0 != (flags & d2_bf_colorize2))
 619                             		.loc 1 489 7 is_stmt 1 view .LVU261
 620                             		.loc 1 489 9 is_stmt 0 view .LVU262
 621 0208 FD 74 C6 40             		tst	#0x40, r6
 622 020c 20 3C                   		beq	.L31
 490:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 491:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* color blend */
 492:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl1 |= ctx->basecolor[0];
 623                             		.loc 1 492 10 is_stmt 1 view .LVU263
 624                             		.loc 1 492 21 is_stmt 0 view .LVU264
 625                             		
 626 020e 06 95 74 02             	   or	8[r7].L, r4
 627                             	.LVL57:
 493:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= ctx->basecolor[1];
 628                             		.loc 1 493 10 is_stmt 1 view .LVU265
 629                             		.loc 1 493 38 is_stmt 0 view .LVU266
 630 0212 A8 FB                   		mov.L	12[r7], r3
 631                             		.loc 1 493 21 view .LVU267
 632 0214 57 35                   		or	r3, r5
 633                             	.LVL58:
 634 0216 EF 00                   		.balign 8,3,5
 635                             	.L32:
 494:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 495:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       else
 496:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 497:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* color multiply */
 498:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= ctx->basecolor[0];
 499:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 500:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 501:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 502:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 503:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       if(0 != (flags & d2_bf_colorize2))
 504:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 505:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* color blend */
 506:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl1 |= ctx->basecolor[0];
 507:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= ctx->basecolor[1];
 508:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 509:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       else
 510:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 511:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          /* color copy */
 512:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= 0x00ffffff;
 513:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 514:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 515:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 516:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* write to context */
 517:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texmodecl[0] = texmodecl1;
 636                             		.loc 1 517 4 is_stmt 1 view .LVU268
 637                             		.loc 1 517 30 is_stmt 0 view .LVU269
 638 0218 E7 74 56                		mov.L	r4, 344[r7]
 518:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texmodecl[1] = texmodecl2;
 639                             		.loc 1 518 4 is_stmt 1 view .LVU270
 640                             		.loc 1 518 30 is_stmt 0 view .LVU271
 641 021b E7 75 57                		mov.L	r5, 348[r7]
 519:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->internaldirty |= d2_dirty_premalpha_t | d2_dirty_material;
 642                             		.loc 1 519 4 is_stmt 1 view .LVU272
 643                             		.loc 1 519 31 is_stmt 0 view .LVU273
 644 021e CE 75 0E 01             		mov.B	270[r7], r5
 645                             	.LVL59:
 646                             		.loc 1 519 31 view .LVU274
 647 0222 65 55                   		or	#5, r5
 648 0224 CB 75 0E 01             		mov.B	r5, 270[r7]
 520:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 521:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* calc mapping parameters */
 522:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    dxu = 65536;
 649                             		.loc 1 522 4 is_stmt 1 view .LVU275
 650                             	.LVL60:
 523:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    dyv = 65536;
 651                             		.loc 1 523 4 view .LVU276
 524:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    u0  = 0;
 652                             		.loc 1 524 4 view .LVU277
 525:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    v0  = 0;
 653                             		.loc 1 525 4 view .LVU278
 526:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 527:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    sw = D2_FIX4( srcwidth );      /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 654                             		.loc 1 527 4 view .LVU279
 528:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    sh = D2_FIX4( srcheight );     /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 655                             		.loc 1 528 4 view .LVU280
 529:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 530:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if( (d2_u16)dstwidth > D2_FIX4(1) )
 656                             		.loc 1 530 4 view .LVU281
 657                             		.loc 1 530 6 is_stmt 0 view .LVU282
 658 0228 BB 05                   		movu.W	24[r0], r5
 659 022a 75 55 10                		cmp	#16, r5
 660 022d 25 39                   		bleu	.L48
 531:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 532:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       dxu = (d2_s32) ( ((d2_u32)D2_FIX16(sw)) / ((d2_u16)dstwidth) );     /* PRQA S 4131 */ /* $Mis
 661                             		.loc 1 532 7 is_stmt 1 view .LVU283
 662                             		.loc 1 532 33 is_stmt 0 view .LVU284
 663 022f FD D4 84                		shll	#20, r8, r4
 664                             	.LVL61:
 665                             		.loc 1 532 47 view .LVU285
 666 0232 FC 27 54                		divu	r5, r4
 667                             		.loc 1 532 11 view .LVU286
 668 0235 EF 42                   		mov.L	r4, r2
 669                             	.LVL62:
 533:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       u0  = dxu / 2;  /* offset by half a pixel step, as we sample in the center of our pixels */
 670                             		.loc 1 533 7 is_stmt 1 view .LVU287
 671                             		.loc 1 533 11 is_stmt 0 view .LVU288
 672 0237 FD 9F 45                		shlr	#31, r4, r5
 673 023a 4B 54                   		add	r5, r4
 674 023c 6A 14                   		shar	#1, r4
 675                             	.LVL63:
 676                             		.loc 1 533 11 view .LVU289
 677 023e 2E 2F                   		bra	.L34
 678                             	.LVL64:
 679                             	.L47:
 476:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 680                             		.loc 1 476 21 view .LVU290
 681 0240 FB 52 00 00 00 FF       		mov.L	#-16777216, r5
 682 0246 2E BC                   		bra	.L29
 683                             	.LVL65:
 684                             	.L31:
 498:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 685                             		.loc 1 498 10 is_stmt 1 view .LVU291
 498:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 686                             		.loc 1 498 38 is_stmt 0 view .LVU292
 687 0248 A8 F3                   		mov.L	8[r7], r3
 498:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 688                             		.loc 1 498 21 view .LVU293
 689 024a 57 35                   		or	r3, r5
 690                             	.LVL66:
 498:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 691                             		.loc 1 498 21 view .LVU294
 692 024c 2E CC                   		bra	.L32
 693                             	.L30:
 503:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 694                             		.loc 1 503 7 is_stmt 1 view .LVU295
 503:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       {
 695                             		.loc 1 503 9 is_stmt 0 view .LVU296
 696 024e FD 74 C6 40             		tst	#0x40, r6
 697 0252 20 0C                   		beq	.L33
 506:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= ctx->basecolor[1];
 698                             		.loc 1 506 10 is_stmt 1 view .LVU297
 506:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****          texmodecl2 |= ctx->basecolor[1];
 699                             		.loc 1 506 21 is_stmt 0 view .LVU298
 700                             		
 701 0254 06 95 74 02             	   or	8[r7].L, r4
 702                             	.LVL67:
 507:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 703                             		.loc 1 507 10 is_stmt 1 view .LVU299
 507:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 704                             		.loc 1 507 38 is_stmt 0 view .LVU300
 705 0258 A8 FB                   		mov.L	12[r7], r3
 507:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 706                             		.loc 1 507 21 view .LVU301
 707 025a 57 35                   		or	r3, r5
 708                             	.LVL68:
 507:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 709                             		.loc 1 507 21 view .LVU302
 710 025c 2E BC                   		bra	.L32
 711                             	.L33:
 512:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 712                             		.loc 1 512 10 is_stmt 1 view .LVU303
 512:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 713                             		.loc 1 512 21 is_stmt 0 view .LVU304
 714 025e 74 35 FF FF FF 00       		or	#0xffffff, r5
 715                             	.LVL69:
 512:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       }
 716                             		.loc 1 512 21 view .LVU305
 717 0264 2E B4                   		bra	.L32
 718                             	.LVL70:
 719                             	.L48:
 524:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    v0  = 0;
 720                             		.loc 1 524 8 view .LVU306
 721 0266 66 04                   		mov.L	#0, r4
 722                             	.LVL71:
 522:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    dyv = 65536;
 723                             		.loc 1 522 8 view .LVU307
 724 0268 FB 2E 00 00 01          		mov.L	#0x10000, r2
 725                             	.LVL72:
 726                             	.L34:
 534:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 535:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(dstheight > D2_FIX4(1))
 727                             		.loc 1 535 4 is_stmt 1 view .LVU308
 728                             		.loc 1 535 6 is_stmt 0 view .LVU309
 729 026d 9B 0D                   		mov.W	26[r0], r5
 730 026f 75 55 10                		cmp	#16, r5
 731 0272 2A 05 38 FD 00          		ble	.L49
 536:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 537:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       dyv = (d2_s32) ( ((d2_u32)D2_FIX16(sh)) / ((d2_u16)dstheight) );    /* PRQA S 4131 */ /* $Mis
 732                             		.loc 1 537 7 is_stmt 1 view .LVU310
 733                             		.loc 1 537 33 is_stmt 0 view .LVU311
 734 0277 FD D4 95                		shll	#20, r9, r5
 735                             		.loc 1 537 50 view .LVU312
 736 027a BB 0B                   		movu.W	26[r0], r3
 737                             		.loc 1 537 47 view .LVU313
 738 027c FC 27 35                		divu	r3, r5
 739                             		.loc 1 537 11 view .LVU314
 740 027f EF 51                   		mov.L	r5, r1
 741                             	.LVL73:
 538:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       v0  = dyv / 2;  /* offset by half a pixel step, as we sample in the center of our pixels */
 742                             		.loc 1 538 7 is_stmt 1 view .LVU315
 743                             		.loc 1 538 11 is_stmt 0 view .LVU316
 744 0281 FD 9F 53                		shlr	#31, r5, r3
 745 0284 4B 35                   		add	r3, r5
 746 0286 6A 15                   		shar	#1, r5
 747                             	.LVL74:
 748                             	.L35:
 539:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 540:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 541:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* handle possible mirroring */
 542:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_mirroru))
 749                             		.loc 1 542 4 is_stmt 1 view .LVU317
 750                             		.loc 1 542 6 is_stmt 0 view .LVU318
 751 0288 FD 78 C6 00 02          		tst	#0x200, r6
 752 028d 10                      		beq	.L36
 543:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 544:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 	   dxu = -dxu;
 753                             		.loc 1 544 5 is_stmt 1 view .LVU319
 754                             		.loc 1 544 9 is_stmt 0 view .LVU320
 755 028e 7E 12                   		neg	r2
 756                             	.LVL75:
 545:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 	   u0 = D2_FIX16(srcwidth)-u0;     /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 757                             		.loc 1 545 5 is_stmt 1 view .LVU321
 758                             		.loc 1 545 10 is_stmt 0 view .LVU322
 759 0290 6D 08                   		shll	#16, r8
 760                             	.LVL76:
 761                             		.loc 1 545 8 view .LVU323
 762 0292 FF 04 48                		sub	r4, r8, r4
 763                             	.LVL77:
 764                             	.L36:
 546:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 547:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_mirrorv))
 765                             		.loc 1 547 4 is_stmt 1 view .LVU324
 766                             		.loc 1 547 6 is_stmt 0 view .LVU325
 767 0295 FD 78 C6 00 04          		tst	#0x400, r6
 768 029a 10                      		beq	.L37
 548:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 549:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 	   dyv = -dyv;
 769                             		.loc 1 549 5 is_stmt 1 view .LVU326
 770                             		.loc 1 549 9 is_stmt 0 view .LVU327
 771 029b 7E 11                   		neg	r1
 772                             	.LVL78:
 550:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 	   v0 = D2_FIX16(srcheight)-v0;    /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 773                             		.loc 1 550 5 is_stmt 1 view .LVU328
 774                             		.loc 1 550 10 is_stmt 0 view .LVU329
 775 029d 6D 09                   		shll	#16, r9
 776                             	.LVL79:
 777                             		.loc 1 550 8 view .LVU330
 778 029f FF 05 59                		sub	r5, r9, r5
 779                             	.LVL80:
 780                             	.L37:
 551:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 552:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 553:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* filtering: offset by -1/2 texel compared to nearest neighbour, to position the 2x2 kernel cor
 554:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_filteru))
 781                             		.loc 1 554 4 is_stmt 1 view .LVU331
 782                             		.loc 1 554 6 is_stmt 0 view .LVU332
 783 02a2 FD 74 C6 04             		tst	#4, r6
 784 02a6 15                      		beq	.L38
 555:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {  
 556:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       u0 -= D2_FIX16(1)/2;     /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 785                             		.loc 1 556 7 is_stmt 1 view .LVU333
 786                             		.loc 1 556 10 is_stmt 0 view .LVU334
 787 02a7 72 44 00 80             		add	#-32768, r4
 788                             	.LVL81:
 789                             	.L38:
 557:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 558:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != (flags & d2_bf_filterv))
 790                             		.loc 1 558 4 is_stmt 1 view .LVU335
 791                             		.loc 1 558 6 is_stmt 0 view .LVU336
 792 02ab FD 74 C6 08             		tst	#8, r6
 793 02af 15                      		beq	.L39
 559:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {  
 560:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       v0 -= D2_FIX16(1)/2;     /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 794                             		.loc 1 560 7 is_stmt 1 view .LVU337
 795                             		.loc 1 560 10 is_stmt 0 view .LVU338
 796 02b0 72 55 00 80             		add	#-32768, r5
 797                             	.LVL82:
 798                             	.L39:
 561:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 562:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 563:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* apply possible shift in source */
 564:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(0 != isRLE)
 799                             		.loc 1 564 4 is_stmt 1 view .LVU339
 800                             		.loc 1 564 6 is_stmt 0 view .LVU340
 801 02b4 61 0C                   		cmp	#0, r12
 802 02b6 20 0D                   		beq	.L40
 565:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 566:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       u0 += D2_FIX16((d2_s32)srcx);    /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 803                             		.loc 1 566 7 is_stmt 1 view .LVU341
 804                             		.loc 1 566 13 is_stmt 0 view .LVU342
 805 02b8 A9 8B                   		mov.L	28[r0], r3
 806 02ba 6D 03                   		shll	#16, r3
 807                             		.loc 1 566 10 view .LVU343
 808 02bc 4B 34                   		add	r3, r4
 809                             	.LVL83:
 567:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       v0 += D2_FIX16((d2_s32)srcy);    /* PRQA S 4131 */ /* $Misra: #PERF_ARITHMETIC_SHIFT_LEFT $*/
 810                             		.loc 1 567 7 is_stmt 1 view .LVU344
 811                             		.loc 1 567 13 is_stmt 0 view .LVU345
 812 02be FD D0 D3                		shll	#16, r13, r3
 813                             		.loc 1 567 10 view .LVU346
 814 02c1 4B 35                   		add	r3, r5
 815                             	.LVL84:
 816                             	.L40:
 568:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 569:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 570:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* setup mapping parameters */
 571:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    (void)d2_settexturemapping( handle, dstx, dsty, u0, v0, dxu, 0, 0, dyv );
 817                             		.loc 1 571 4 is_stmt 1 view .LVU347
 818                             		.loc 1 571 10 is_stmt 0 view .LVU348
 819 02c3 A1 01                   		mov.L	r1, 16[r0]
 820                             	.LVL85:
 821                             		.loc 1 571 10 view .LVU349
 822 02c5 3E 03 00                		mov.L	#0, 12[r0]
 823 02c8 3E 02 00                		mov.L	#0, 8[r0]
 824 02cb A0 0A                   		mov.L	r2, 4[r0]
 825 02cd E3 05                   		mov.L	r5, [r0]
 826 02cf 9C 0B                   		mov.W	34[r0], r3
 827 02d1 9C 02                   		mov.W	32[r0], r2
 828                             	.LVL86:
 829                             		.loc 1 571 10 view .LVU350
 830 02d3 EF B1                   		mov.L	r11, r1
 831                             	.LVL87:
 832                             		.loc 1 571 10 view .LVU351
 833 02d5 05 00 00 00             		bsr	_d2_settexturemapping
 834                             	.LVL88:
 572:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 573:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* do blit */
 574:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    (void)d2_renderbox_intern( (d2_devicedata*)handle, blitcontext, dstx, dsty, dstwidth, dstheight 
 835                             		.loc 1 574 4 is_stmt 1 view .LVU352
 836                             		.loc 1 574 10 is_stmt 0 view .LVU353
 837 02d9 D5 00 0D 01             		mov.W	26[r0], 2[r0]
 838 02dd D1 00 0C                		mov.W	24[r0], [r0]
 839 02e0 9C 0C                   		mov.W	34[r0], r4
 840 02e2 9C 03                   		mov.W	32[r0], r3
 841 02e4 EF 72                   		mov.L	r7, r2
 842 02e6 EF B1                   		mov.L	r11, r1
 843 02e8 05 00 00 00             		bsr	_d2_renderbox_intern
 844                             	.LVL89:
 575:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 576:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* restore state */
 577:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #ifdef D2_USEBLITBACKUPCONTEXT
 578:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    D2_DEV(handle)->ctxselected = backup_context;
 579:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 580:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    blitcontext->texclut_cached = NULL;
 581:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #else
 582:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    /* restore from stack */
 583:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    if(backup_context && (0 == (d2_bf_no_blitctxbackup & flags)))
 845                             		.loc 1 583 4 is_stmt 1 view .LVU354
 846                             		.loc 1 583 6 is_stmt 0 view .LVU355
 847 02ec 61 0A                   		cmp	#0, r10
 848 02ee 3A 8D 00                		beq	.L41
 849                             		.loc 1 583 22 discriminator 1 view .LVU356
 850 02f1 FD 78 C6 00 01          		tst	#0x100, r6
 851 02f6 3B 85 00                		bne	.L41
 584:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 585:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->fillmode        = backup_context->fillmode;       
 852                             		.loc 1 585 7 is_stmt 1 view .LVU357
 853                             		.loc 1 585 28 is_stmt 0 view .LVU358
 854 02f9 C4 A7 17                		mov.B	[r10], 23[r7]
 586:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->internaldirty   = backup_context->internaldirty;  
 855                             		.loc 1 586 7 is_stmt 1 view .LVU359
 856                             		.loc 1 586 28 is_stmt 0 view .LVU360
 857 02fc C9 A7 02 0E 01          		mov.B	2[r10], 270[r7]
 587:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->features        = backup_context->features;       
 858                             		.loc 1 587 7 is_stmt 1 view .LVU361
 859                             		.loc 1 587 28 is_stmt 0 view .LVU362
 860 0301 C5 A7 01 D5             		mov.B	1[r10], 213[r7]
 588:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texcenterx      = backup_context->texcenterx;     
 861                             		.loc 1 588 7 is_stmt 1 view .LVU363
 862                             		.loc 1 588 28 is_stmt 0 view .LVU364
 863 0305 E5 A7 01 3F             		mov.L	4[r10], 252[r7]
 589:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texcentery      = backup_context->texcentery;     
 864                             		.loc 1 589 7 is_stmt 1 view .LVU365
 865                             		.loc 1 589 28 is_stmt 0 view .LVU366
 866 0309 E5 A7 02 40             		mov.L	8[r10], 256[r7]
 590:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->tbstylemask     = backup_context->tbstylemask;    
 867                             		.loc 1 590 7 is_stmt 1 view .LVU367
 868                             		.loc 1 590 28 is_stmt 0 view .LVU368
 869 030d E5 A7 03 4B             		mov.L	12[r10], 300[r7]
 591:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texbpp          = backup_context->texbpp;         
 870                             		.loc 1 591 7 is_stmt 1 view .LVU369
 871                             		.loc 1 591 28 is_stmt 0 view .LVU370
 872 0311 C5 A7 29 E9             		mov.B	41[r10], 233[r7]
 592:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texwrapmask     = backup_context->texwrapmask;    
 873                             		.loc 1 592 7 is_stmt 1 view .LVU371
 874                             		.loc 1 592 28 is_stmt 0 view .LVU372
 875 0315 E5 A7 04 4E             		mov.L	16[r10], 312[r7]
 593:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texmodemask     = backup_context->texmodemask;    
 876                             		.loc 1 593 7 is_stmt 1 view .LVU373
 877                             		.loc 1 593 28 is_stmt 0 view .LVU374
 878 0319 E5 A7 05 4D             		mov.L	20[r10], 308[r7]
 594:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texmode         = backup_context->texmode;        
 879                             		.loc 1 594 7 is_stmt 1 view .LVU375
 880                             		.loc 1 594 28 is_stmt 0 view .LVU376
 881 031d C5 A7 28 E8             		mov.B	40[r10], 232[r7]
 595:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texpitch        = backup_context->texpitch;       
 882                             		.loc 1 595 7 is_stmt 1 view .LVU377
 883                             		.loc 1 595 28 is_stmt 0 view .LVU378
 884 0321 E5 A7 06 3B             		mov.L	24[r10], 236[r7]
 596:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texwidth        = backup_context->texwidth;       
 885                             		.loc 1 596 7 is_stmt 1 view .LVU379
 886                             		.loc 1 596 28 is_stmt 0 view .LVU380
 887 0325 E5 A7 07 3C             		mov.L	28[r10], 240[r7]
 597:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texheight       = backup_context->texheight;      
 888                             		.loc 1 597 7 is_stmt 1 view .LVU381
 889                             		.loc 1 597 28 is_stmt 0 view .LVU382
 890 0329 E5 A7 08 3D             		mov.L	32[r10], 244[r7]
 598:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texbase         = backup_context->texbase;        
 891                             		.loc 1 598 7 is_stmt 1 view .LVU383
 892                             		.loc 1 598 28 is_stmt 0 view .LVU384
 893 032d E5 A7 09 3E             		mov.L	36[r10], 248[r7]
 599:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texsubppb       = backup_context->texsubppb;      
 894                             		.loc 1 599 7 is_stmt 1 view .LVU385
 895                             		.loc 1 599 28 is_stmt 0 view .LVU386
 896 0331 C5 A7 2A EA             		mov.B	42[r10], 234[r7]
 600:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->rlebpp          = backup_context->rlebpp;         
 897                             		.loc 1 600 7 is_stmt 1 view .LVU387
 898                             		.loc 1 600 28 is_stmt 0 view .LVU388
 899 0335 C5 A7 2B EB             		mov.B	43[r10], 235[r7]
 601:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->rlemask         = backup_context->rlemask;        
 900                             		.loc 1 601 7 is_stmt 1 view .LVU389
 901                             		.loc 1 601 28 is_stmt 0 view .LVU390
 902 0339 E5 A7 0B 4F             		mov.L	44[r10], 316[r7]
 602:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->clutmask        = backup_context->clutmask;       
 903                             		.loc 1 602 7 is_stmt 1 view .LVU391
 904                             		.loc 1 602 28 is_stmt 0 view .LVU392
 905 033d E5 A7 0C 50             		mov.L	48[r10], 320[r7]
 603:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->cr2mask         = backup_context->cr2mask;        
 906                             		.loc 1 603 7 is_stmt 1 view .LVU393
 907                             		.loc 1 603 28 is_stmt 0 view .LVU394
 908 0341 E5 A7 0D 49             		mov.L	52[r10], 292[r7]
 604:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texmodecl[0]    = backup_context->texmodecl[0];   
 909                             		.loc 1 604 7 is_stmt 1 view .LVU395
 910                             		.loc 1 604 28 is_stmt 0 view .LVU396
 911 0345 E5 A7 0E 56             		mov.L	56[r10], 344[r7]
 605:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texmodecl[1]    = backup_context->texmodecl[1];   
 912                             		.loc 1 605 7 is_stmt 1 view .LVU397
 913                             		.loc 1 605 28 is_stmt 0 view .LVU398
 914 0349 E5 A7 0F 57             		mov.L	60[r10], 348[r7]
 606:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].x1    = backup_context->texlim[0].x1;   
 915                             		.loc 1 606 7 is_stmt 1 view .LVU399
 916                             		.loc 1 606 28 is_stmt 0 view .LVU400
 917 034d D5 A7 2A 54             		mov.W	84[r10], 168[r7]
 607:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].y1    = backup_context->texlim[0].y1;   
 918                             		.loc 1 607 7 is_stmt 1 view .LVU401
 919                             		.loc 1 607 28 is_stmt 0 view .LVU402
 920 0351 D5 A7 2B 55             		mov.W	86[r10], 170[r7]
 608:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].xadd2 = backup_context->texlim[0].xadd2;
 921                             		.loc 1 608 7 is_stmt 1 view .LVU403
 922                             		.loc 1 608 28 is_stmt 0 view .LVU404
 923 0355 E5 A7 13 28             		mov.L	76[r10], 160[r7]
 609:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].yadd2 = backup_context->texlim[0].yadd2;
 924                             		.loc 1 609 7 is_stmt 1 view .LVU405
 925                             		.loc 1 609 28 is_stmt 0 view .LVU406
 926 0359 E5 A7 14 29             		mov.L	80[r10], 164[r7]
 610:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].xadd  = backup_context->texlim[0].xadd; 
 927                             		.loc 1 610 7 is_stmt 1 view .LVU407
 928                             		.loc 1 610 28 is_stmt 0 view .LVU408
 929 035d E5 A7 11 26             		mov.L	68[r10], 152[r7]
 611:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[0].yadd  = backup_context->texlim[0].yadd; 
 930                             		.loc 1 611 7 is_stmt 1 view .LVU409
 931                             		.loc 1 611 28 is_stmt 0 view .LVU410
 932 0361 E5 A7 12 27             		mov.L	72[r10], 156[r7]
 612:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[1].xadd  = backup_context->texlim[1].xadd; 
 933                             		.loc 1 612 7 is_stmt 1 view .LVU411
 934                             		.loc 1 612 28 is_stmt 0 view .LVU412
 935 0365 E5 A7 17 2C             		mov.L	92[r10], 176[r7]
 613:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[1].yadd  = backup_context->texlim[1].yadd; 
 936                             		.loc 1 613 7 is_stmt 1 view .LVU413
 937                             		.loc 1 613 28 is_stmt 0 view .LVU414
 938 0369 E5 A7 18 2D             		mov.L	96[r10], 180[r7]
 614:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 615:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    else
 616:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    {
 617:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       (void)d2_setfillmode( handle, fillmode_b); 
 618:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 619:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 620:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** #endif
 621:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 622:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    return D2_OK;
 939                             		.loc 1 622 11 view .LVU415
 940 036d 66 01                   		mov.L	#0, r1
 613:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****       ctx->texlim[1].yadd  = backup_context->texlim[1].yadd; 
 941                             		.loc 1 613 28 view .LVU416
 942 036f 2E 16                   		bra	.L10
 943                             	.LVL90:
 944                             	.L49:
 525:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** 
 945                             		.loc 1 525 8 view .LVU417
 946 0371 66 05                   		mov.L	#0, r5
 523:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    u0  = 0;
 947                             		.loc 1 523 8 view .LVU418
 948 0373 FB 1E 00 00 01          		mov.L	#0x10000, r1
 949 0378 38 10 FF                		bra	.L35
 950                             	.LVL91:
 951                             	.L41:
 617:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 952                             		.loc 1 617 7 is_stmt 1 view .LVU419
 617:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c ****    }
 953                             		.loc 1 617 13 is_stmt 0 view .LVU420
 954 037b AA 0A                   		mov.L	36[r0], r2
 955 037d EF B1                   		mov.L	r11, r1
 956 037f 05 00 00 00             		bsr	_d2_setfillmode
 957                             	.LVL92:
 958                             		.loc 1 622 11 view .LVU421
 959 0383 66 01                   		mov.L	#0, r1
 960                             	.LVL93:
 961                             	.L10:
 623:../src/smc_gen/r_drw2d_rx/src/tes/dave_blit.c **** }
 962                             		.loc 1 623 1 view .LVU422
 963 0385 3F 6D 18                		rtsd	#96, r6-r13
 964                             		.loc 1 623 1 view .LVU423
 965                             	.LFE7:
 1035                             	.Letext0:
 1036                             		.file 3 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_drw2d_rx\\inc\\tes/dav
 1037                             		.file 4 "D:\\e2_studio\\workspace\\FULLMONI_WIDE\\Firmware\\src\\smc_gen\\r_drw2d_rx\\inc\\tes/dav
 1038                             		.file 5 "../src/smc_gen/r_drw2d_rx/src/tes/dave_dlist.h"
 1039                             		.file 6 "../src/smc_gen/r_drw2d_rx/src/tes/dave_rbuffer.h"
 1040                             		.file 7 "../src/smc_gen/r_drw2d_rx/src/tes/dave_gradient.h"
 1041                             		.file 8 "../src/smc_gen/r_drw2d_rx/src/tes/dave_context.h"
 1042                             		.file 9 "../src/smc_gen/r_drw2d_rx/src/tes/dave_box.h"
